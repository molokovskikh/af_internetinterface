@using Inforoom2.Helpers
@using Inforoom2.Models
@using NPOI.SS.Formula.Functions
@using Remotion.Linq.Clauses.ResultOperators
@model dynamic

@{
	ViewBag.Title = "Список подключенных домов";
	List<SwitchAddress> addresses = ViewBag.Addresses;
}

<h2 class="heading">@ViewBag.Title</h2>
<div class="paddedBlock paragraph">
	<h3 class="font-header">Подключенные дома по городу  @ViewBag.CurrentRegion</h3>	
	@{
		foreach (var street in ViewBag.Streets) {
			var streets = ViewBag.Street;
			streets = street.Name + " : ";
			var houses = (IList<House>)street.Houses;
			//улицу,у корторой нет домов,не выводим
			if (houses.Count > 0) {
				@streets
			}
			else {
				continue;
			}

			//конвертируем дома для сортировки
			//на доме с буквой,доходим до буквы и останавливаемся,возвращая только цифру
			var houseList = houses.Select(s => {
				string cutNumber = "";
				for (int i = 0; i < s.Number.Length; i++) {
					try {
						cutNumber += Convert.ToInt32(s.Number[i].ToString()).ToString();
					}
					catch (Exception) {
						break;
					}
				}
				return new { Number = Convert.ToInt32(cutNumber), House = s };
			} 
			).ToList();
	
			//сортируем дома по возрастанию
			houseList = houseList.OrderBy(s => s.Number).ToList();
	
			//соединяем все дома в строку,разделяя запятой
			var house = string.Join(", ", houseList.Select(s => s.House.Number));
			@house
			<br/>
		}
	}
</div>