@using Inforoom2.Helpers
@using Inforoom2.Models
@using NPOI.SS.Formula.Functions
@using Remotion.Linq.Clauses.ResultOperators
@model dynamic

@{
	ViewBag.Title = "Список подключенных домов";
	string currentRegionName = ViewBag.CurrentRegion;
	List<string> streets = ViewBag.Streets;
	List<House> houses = ViewBag.Houses;
	houses = houses.OrderBy(s=>s.Street.Name).ToList();
}

<h2 class="heading">@ViewBag.Title</h2>
<div class="paddedBlock paragraph">
	<h3 class="font-header">Подключенные дома по городу  @ViewBag.CurrentRegion<br/>
		<i>(для просмотра списка подключенных домов других городов, необходимо изменить город на сайте в левом верхнем углу)</i></h3>	
	@{
		foreach (var streetName in streets) {
			@(streetName + " : ")

			var currentHouses = houses.Where(s => s.Street.Name == streetName ).ToList().GroupBy(s => s.Number).Select(group => group.First()).ToList();

			//конвертируем дома для сортировки
			//на доме с буквой,доходим до буквы и останавливаемся,возвращая только цифру
			var houseList = currentHouses.Select(s => {
				string cutNumber = "";
				for (int i = 0; i < s.Number.Length; i++) {
					try {
						cutNumber += Convert.ToInt32(s.Number[i].ToString()).ToString();
					}
					catch (Exception) {
						break;
					}
				}
				if (string.IsNullOrEmpty(cutNumber)) {
					return new { Number = 0, Key = "0", House = s };
				}
				return new { Number = Convert.ToInt32(cutNumber), Key = s.Number.Substring(s.Number.IndexOf(cutNumber)), House = s };
			}
				).ToList();

			//сортируем дома по возрастанию
			houseList = houseList.OrderBy(s => s.Number).ThenBy(s=>s.Key).ToList();

			//соединяем все дома в строку,разделяя запятой
			var house = string.Join(", ", houseList.Select(s => s.House.Number.ToUpper()));
			@house
			<br/>
		}
	}
</div>