@section JavaScript{<script type="text/javascript"src="@Url.Content("~/Scripts/ClientRequest.js")"></script>}
@using Inforoom2.Models
@{
	ClientRequest clientRequest = ViewBag.ClientRequest;
}

<script src="http://api-maps.yandex.ru/2.1/?lang=ru_RU" type="text/javascript"></script>


<div class="CreateClientRequest" >
	
	@using (@Html.BeginForm("Create", "ClientRequest", FormMethod.Post)) {
		<div>
			<span>ФИО</span>
			@Html.TextBoxFor(model => clientRequest.ApplicantName)
			@ViewBag.Validation.GetError(clientRequest, "ApplicantName", "Поле не может быть пустым")
		</div>
		<div>
			<span>Номер телефона</span>
			@Html.TextBoxFor(model => clientRequest.ApplicantPhoneNumber)
			@ViewBag.Validation.GetError(clientRequest, "ApplicantPhoneNumber", "Укажите номер телефона")
		</div>
		<div>
			<span>Эл. почта</span>
			@Html.TextBoxFor(model => clientRequest.Email)
			@ViewBag.Validation.GetError(clientRequest, "Email", "Неправильный адрес эл. почты")
		</div>
		<div>
			<span>Город</span>
			@Html.TextBoxFor(model => clientRequest.Address.House.Street.Region.City.Name, new { onkeyup = "typeWatcher( 1500);" })
			@ViewBag.Validation.GetError(clientRequest.Address.House.Street.Region.City, "Name", "Поле не может быть пустым")
		</div>
		<div>
			<span>Улица</span>
			@Html.TextBoxFor(model => clientRequest.Address.House.Street.Name, new { onkeyup = "typeWatcher( 1500);" })
			@ViewBag.Validation.GetError(clientRequest.Address.House.Street, "Name", "Поле не может быть пустым")
		</div>
		<div>
			<span>Дом</span>
			@Html.TextBoxFor(model => clientRequest.Address.House.Number, new { onkeyup = "typeWatcher( 1500);", placeholder = "Например 14А" })
			@ViewBag.Validation.GetError(clientRequest.Address.House, "Number", "Поле не может быть пустым")
		</div>
		<div>
			<span>Корпус / Строение</span>
			@Html.TextBoxFor(model => clientRequest.Address.House.Housing, new { onkeyup = "typeWatcher( 1500);", placeholder = "Например К3 С1" })
		</div>
		<div>
			<span>Квартира</span>
			@Html.TextBoxFor(model => clientRequest.Address.Apartment)
			@ViewBag.Validation.GetError(clientRequest.Address, "Apartment", "Поле не может быть пустым")
		</div>
		<div>
			<span>Подъезд</span>
			@Html.TextBoxFor(model => clientRequest.Address.Entrance)
			@ViewBag.Validation.GetError(clientRequest.Address, "Entrance", "Поле не может быть пустым")
		</div>
		<div>
			<span>Этаж</span>
			@Html.TextBoxFor(model => clientRequest.Address.Floor)
			@ViewBag.Validation.GetError(clientRequest.Address, "Floor", "Поле не может быть пустым")
		</div>
		<div>
			<span>Выберите тариф</span>
			@Html.DropDownListFor(k => clientRequest.Plan.Name, ViewBag.Tariffs as IList<SelectListItem>)
		</div>

		<input type="submit"  value="Отправить заявку"/>
	}
	
	<button class="SwitchAddressCheck" onclick=" checkSwitchAddress() ">Проверить адрес свича</button>
	<div><span class="YMapAddressResult"></span></div>
	<div><span class="SwitchAddressResult"></span></div>
	
	<div id="yandexMap" class="YMap" style="width: 600px; height: 400px"></div>

	
</div>