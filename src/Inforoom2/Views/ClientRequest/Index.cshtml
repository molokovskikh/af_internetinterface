@section JavaScript{<script type="text/javascript"src="@Url.Content("~/Scripts/ClientRequest.js")"></script>}
@using Inforoom2.Components
@using Inforoom2.Helpers
@using Inforoom2.Models

@{
	ViewBag.Title = "Заявка на подключение";
	ClientRequest clientRequest = ViewBag.ClientRequest;
	ValidationRunner validationRunner = ViewBag.Validation;
	bool IsRedirected = ViewBag.IsRedirected;
	bool IsCityValidated = ViewBag.IsCityValidated;
	bool IsStreetValidated = ViewBag.IsStreetValidated;
	bool IsHouseValidated = ViewBag.IsHouseValidated;
}

<script src="http://api-maps.yandex.ru/2.1/?lang=ru_RU" type="text/javascript"></script>

<div class="heading">ЗАЯВКА НА ПОДКЛЮЧЕНИЕ</div>
@using (@Html.BeginForm("Index", "ClientRequest", FormMethod.Post)) {
	<div class="leftpersonal">
		<div>
			<div class="personals">Ф.И.О:</div>
			@Html.ValidationEditor(validationRunner, clientRequest, "ApplicantName", new { @class = "personal" }, HtmlTag.input, HtmlType.text)
		</div>
		<div>
			<div class="personals">Номер телефона:</div>
			@Html.ValidationEditor(validationRunner, clientRequest, "ApplicantPhoneNumber", new { @class = "personal", placeholder = "Введите номер в десятизначном формате" }, HtmlTag.input, HtmlType.text)
		</div>
		<div>
			<div class="personals">Электронная почта:</div>
			@Html.ValidationEditor(validationRunner, clientRequest, "Email", new { @class = "personal" }, HtmlTag.input, HtmlType.text)
		</div>
		<div>
			<div class="personals">Город:</div>
			@Html.ValidationEditor(validationRunner, clientRequest, "City", new { @class = "personal", onkeyup = "typeWatcher(1000)" }, HtmlTag.input, HtmlType.text, IsCityValidated)
		</div>
		<div>
			<div class="personals">Улица:</div>
			@Html.ValidationEditor(validationRunner, clientRequest, "Street", new { @class = "personal", onkeyup = "typeWatcher(1000)" }, HtmlTag.input, HtmlType.text, IsStreetValidated)
		</div>
		<div class="block">
			<div class="addon">Дом:</div>
			@Html.ValidationEditor(validationRunner, clientRequest, "HouseNumber", new { @class = "addons", onkeyup = "typeWatcher(1000)" }, HtmlTag.input, HtmlType.text, IsHouseValidated)
		</div>
		<div class="block">
			<div class="addon">Корпус:</div>
			@Html.ValidationEditor(validationRunner, clientRequest, "Housing", new { @class = "addons", onkeyup = "typeWatcher(1000)" }, HtmlTag.input, HtmlType.text)
		</div>
		<div class="block">
			<div class="addon">Квартира:</div>
			@Html.ValidationEditor(validationRunner, clientRequest, "Apartment", new { @class = "addons" }, HtmlTag.input, HtmlType.text)
		</div>
		<div class="block">
			<div class="addon">Подъезд:</div>
			@Html.ValidationEditor(validationRunner, clientRequest, "Entrance", new { @class = "addons" }, HtmlTag.input, HtmlType.text)
		</div>
		<div class="block">
			<div class="addon">Этаж:</div>
			@Html.ValidationEditor(validationRunner, clientRequest, "Floor", new { @class = "addons" }, HtmlTag.input, HtmlType.text)
		</div>
		<div>
			@if (IsRedirected) {
				<div class ="success">
					<div class="personals">Тарифный план:</div>
					@Html.DropDownListExtendedFor(k => clientRequest.Plan, ViewBag.Plans as List<Plan>, k => k.Name, null, new { @class = "rounded" }, clientRequest.Plan != null ? clientRequest.Plan.Id : 0)<div class="icon"></div>
					<!-- не переноси строку - поедет верстка -->
				</div>
			}
			else {
				<div class="personals">Тарифный план:</div>
				@Html.DropDownListExtendedFor(k => clientRequest.Plan, ViewBag.Plans as List<Plan>, k => k.Name, null, new { @class = "rounded" }, clientRequest.Plan != null ? clientRequest.Plan.Id : 0)
			}
		</div>
	</div>
	<div id="yandexMap" class="map"></div>
	<div class="contract">
		<div>
			@Html.CheckBoxFor(k => clientRequest.IsContractAccepted)
			Я прочитал договор оферту</div>
		<p>В соответствии со ст.426 Гражданского кодекса РФ публичный договор является одним из видов договоров,
			в соответствии с которым одна сторона принимает на себя обязательство по оказанию услуг в отношении неопределенного круга лиц,
			обратившихся с запросом на предоставление данных услуг.</p>
	</div>
	@Html.HiddenFor(k => clientRequest.YandexCity, new { id = "yandexCityHidden" })
	@Html.HiddenFor(k => clientRequest.YandexStreet, new { id = "yandexStreetHidden" })
	@Html.HiddenFor(k => clientRequest.YandexHouse, new { id = "yandexHouseHidden" })
	<input class="resend" type="submit" value="Отправить">
}