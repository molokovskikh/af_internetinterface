@section JavaScript{<script type="text/javascript"src="@Url.Content("~/Scripts/AdminAddressController.js")"></script>}
@using System.Activities.Statements
@using Inforoom2.Helpers
@using Inforoom2.Models
@{
	SwitchAddress switchAddress = ViewBag.SwitchAddress;
}
<div style="width: 1000px;  margin: 0px auto; border: 1px gainsboro solid">
	<div class="UpdateAddress" >
		@using (@Html.BeginForm("UpdateSwitchAddress", "AdminAddress", FormMethod.Post)) {
			@Html.HiddenFor(model => switchAddress.Id)

			<div>
				<span >Свитч</span>
				@Html.DropDownListExtendedFor(k => switchAddress.Switch, ViewBag.Switches as List<Switch>, obj => obj.Name, @switch => new {@class = "switch" + @switch.Id}, null, switchAddress.Switch.Id)
				@ViewBag.Validation.GetError(switchAddress, "Switch", "Поле не может быть пустым")
			</div>
			<div>
				<span >Регион</span>
				@Html.DropDownListExtendedFor(k => switchAddress.Street.Region, ViewBag.Regions as List<Region>, obj => obj.Name, region => new {@class = "region" + region.Id}, null, switchAddress.Street.Region.Id)
				@ViewBag.Validation.GetError(switchAddress, "Switch", "Поле не может быть пустым")
			</div>
			<div>
				<span>Улица</span>
				@Html.DropDownListExtendedFor(k => switchAddress.Street, ViewBag.Streets as List<Street>, obj => obj.Name, street => new {@class = "region" + street.Region.Id + " " + "street" + street.Id}, null, switchAddress.Street.Id)
				@ViewBag.Validation.GetError(switchAddress.House, "Street", "Поле не может быть пустым")
			</div>
			<div>
				<div class="switchAddressStartDiv" >Дом(от)</div>
				@Html.TextBoxFor(k => switchAddress.Start, new {@class = "switchAddressStart"})
				@ViewBag.Validation.GetError(switchAddress, "Entrance", "Значение не может быть пустым")
			</div>
			<div>
				<div class ="switchAddressEndDiv">Дом(до)</div>
				@Html.TextBoxFor(k => switchAddress.End, new {@class = "switchAddressEnd"})
				@ViewBag.Validation.GetError(switchAddress, "Entrance", "Значение не может быть пустым")
			</div>
			<div>
				<div class="switchAddressSideDiv">Сторона</div>
				@Html.DropDownEnumListFor(k => switchAddress.Side, new {@class = "switchAddressSide"})
				@ViewBag.Validation.GetError(switchAddress, "Entrance", "Значение не может быть пустым")
			</div>
		

			<input type="submit"  value="Принять изменения"/>
		}
		<button class="BackButton" onclick=" location.href = '@Url.Action("AdminAddressSwitchAddress", "AdminAddress")' ">Назад</button>
	
	</div>
</div>