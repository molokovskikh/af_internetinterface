${app.Asset("service-requests.css")}
${app.Asset("service-requests.js")}

<div class="borderless-content">
	<% #поле должно быть за пределами формы что бы избежать биндинга, оно нужно что бы передать данные в js %>
	${FormHelper.HiddenField("request.IsOverdue")}
	<% if request != null: %>
	<div class="request-details">
	<% if Edit: %>
	<form class="validateFormService" action="${Siteroot}/ServiceRequest/EditServiceRequest" method="post">
		${FormHelper.HiddenField("request.Id")}
		${FormHelper.HiddenField("request.Client.Id")}
		${FormHelper.HiddenField("request.Description")}
	<% end %>
	<table class="request-details-table table">
		<thead>
			<tr>
				<th colspan=4>
				<% if IsService: %>
					Заявка клиента: ${request.Client.Name}
				<% else: %>
					${app.LinkTo(request.Client)}
				<% end %>
				<% if not Edit: %>
					<a href="?Id=${request.Id}&Edit=true">(Редактировать)</a>
				<% end %>
				</th>
			</tr>
		</thead>
		<tbody>
			<tr class="requestCutInfo">
				<td><b>Адрес клиента</b></td>
				<td>${request.Client.GetAdress()}</td>
				<% endPoint = request.Client.FirstPoint() %>
				<% if endPoint != null: %>
					<td><b>Подключен</b></td>
					<td>${?endPoint.Switch.Name} (${?endPoint.Switch.IP}) <b>Порт</b> ${endPoint.Port}</td>
				<% else: %>
					<td></td>
					<td></td>
				<% end %>
			</tr>
			<tr class="requestCutInfo">
				<td><b>Статус</b></td>
				<% if not Edit: %>
					<td>${app.Display(request.Status)}</td>
				<% else: %>
					<td>${app.Edit("request.Status", {"data-bind": "value: status"})}</td>
				<% end %>
				<td><b>Дата создания</b></td>
				<td>${request.RegDate.ToShortDateString()}</td>
			</tr>
			<tr class=requestCutInfo>
				<td><b>Телефон для связи</b></td>
				<% if not Edit: %>
				<td>${request.Contact}</td>
				<% else: %>
				<td>${app.Edit("request.Contact")}</td>
				<% end %>
				<td><b>Дата/время выполнения</b></td>
				<% if not Edit: %>
					<td>${?request.PerformanceDate}</td>
				<% else: %>
					<td>
						<input type=text value="${?request.PerformanceDate.ToShortDateString()}" name="request.PerformanceDate" class="graph_date" class="dp-hover">
						${FormHelper.TextField("request.PerformanceTime", {@class: @time})}
					</td>
				<% end %>
			</tr>
			<tr class="requestCutInfo">
				<td><b>Назначена</b></td>
				<% if not Edit: %>
				<td>${request.GetPerformerName()}</td>
				<% else: %>
				<td>
					${app.Edit("request.Performer", ingeners)}
				</td>
				<% end %>
				<td><b>Зарегистрировал</b></td>
				<td>${request.Registrator.Name}</td>
			</tr>
			<tr class="requestCutInfo last">
				<td><b>Сумма за оказанные услуги</b></td>
				<% if not Edit: %>
					<td>${?request.Sum.ToString("C")}</td>
				<% else: %>
					<td>
						<input id="sumField" type=text name="request.Sum" data-bind="value: sum, disable: isFree, valueUpdate: 'input'" value="${?request.Sum.ToString("0.00").Replace(",",".")}" />
					</td>
				<% end %>
				<td id="comment_sum"><b>Бесплатная</b></td>
				<% if not Edit:
					if request.Free: %>
						<td>Да</td>
					<% else: %>
						<td>Нет</td>
					<% end else: %>
						<td>
							${app.Edit("request.Free", {"data-bind": "checked: isFree"})}
						</td>
				<% end %>
			</tr>
			<% if request.Client.PhysicalClient : %>
			<tr>
				<td>
					<b>Восстановление работы</b>
				</td>
				<td>
				<span class="blockForRepair">
				<% if request.BlockForRepair : %>
				да
				<% else: %>
				нет
				<% end %>
				</span>
				<% if Edit and not request.BlockForRepair : %>
				<input type="submit" name="blockForRepair" value="Восстановление работы" />
				<% end %>
				</td>
			</tr>
			<% end %>
			<% if edit: %>
			<tr data-bind="visible: isOverdueReasonMandatory">
				<td>
					<b>${app.Label("request.OverdueReason")}</b>
				</td>
				<td>
					${FormHelper.TextArea("request.OverdueReason", { @cols: 30, @rows: 2 })}
				</td>
			</tr>
			<tr data-bind="visible: isFree">
				<td>
					<b>Основание для бесплатной заявки</b>
				</td>
				<td colspan="100">
					<textarea cols="30" rows="2" class="comment_sum_text"></textarea>
				</td>
			</tr>
			<tr data-bind="visible: canWriteSms">
				<td>
					${app.Label("request.CloseSmsMessage")}
				</td>
				<td colspan="100">
					${FormHelper.TextArea("request.CloseSmsMessage", { @cols: 30, @rows: 2 })}
				</td>
			</tr>
			<% end %>
			<tr>
				<td colspan="4" style="padding-top: 20px"><b>Описание</b></td>
			</tr>
			<tr>
				<td colspan="4">${request.GetDescription()}</td>
			</tr>
			<% if Edit: %>
			<tr>
				<td colspan="4">
					<button type=submit id="saveButton" class="button">Сохранить</button>
				</td>
			</tr>
			<% end %>
		</tbody>
	</table>
	<% if Edit: %>
	</form>
	<% end %>

		<% if request.Iterations.Count: %>
		<div class="borderless-content-subblock">
			<table class="table">
				<tbody>
				<% for iteration in request.Iterations: %>
					<tr>
						<td>
							Добавлено <b>!{iteration.Performer.Name}</b> !{iteration.RegDate}<br>
							${iteration.GetDescription()}
						</td>
					</tr>
				<% end %>
				</tbody>
			</table>
		</div>
		<% end %>

		${FormHelper.FormTag("${Siteroot}/ServiceRequest/AddIteration", {})}
			${FormHelper.HiddenField("iteration.Request.Id")}
			<table>
				<tbody>
					<tr>
						<td><b>Добавить описание</b></td>
					</tr>
					<tr>
						<td>
							${FormHelper.TextArea("iteration.Description", {@rows: "7", @cols: "90%"})}
						</td>
					</tr>
					<tr>
						<td>
							<button type="submit" class="button">Добавить</button>
						</td>
					</tr>
				</tbody>
			</table>
		${FormHelper.EndFormTag()}

	</div>
	<% else: %>
		<div class="flash">
			<div class="error">
				Заявка либо не найдена, либо вы не имеете доступа к ней
			</div>
		</div>
	<% end %>
</div>