@using System.Activities.Expressions
@using System.Activities.Statements
@using Inforoom2.Models
@{
	ViewBag.Title = "График подключений";
	var team = ViewBag.Servicemen;
	DateTime date = ViewBag.ServicemenDate;
	ServiceRequest ServiceRequest = ViewBag.ServiceRequest;
	var regions = new List<Region>();
	regions.Add(new Region(){Id=0,Name = ""});
	regions.AddRange(ViewBag.Regions);
	Region Region = ViewBag.Region ?? regions.First();
}
@section JavaScript{<script type="text/javascript"src="@Url.Content("~/Scripts/ClientController.ServiceRequest.js")"></script>}
<div class="servicemen panel panel-primary col-md-6">
	<div class="wrapper">
		<form class="form-horizontal form-groups-bordered">
			<div class="form-group">
				<label class="col-sm-1 control-label">Дата</label>
				<iv class="col-sm-3">
					<div class="input-group">
						<input type="text" data-format="dd.mm.yyyy" class="form-control datepicker" value="@date">
										
						<div class="input-group-addon">
							<a href="#"><i class="entypo-calendar"></i></a>
						</div>
					</div>
				</iv>
				<label class="col-sm-2 control-label">Регион</label>
				<div class="col-sm-4">
					@Html.DropDownList("regionId",new SelectList(regions,"Id","Name",Region.Id),new { @class = "regionId form-control" })
				</div>
			</div>
		</form>
		<table class="table table-bordered table-striped datatable dataTable no-footer">
			<thead>
				<tr>
					<th class="time left"></th>
					@foreach (var employee in team) {
						var cl = "employee" + employee.Id;
						<th class="@cl">@employee.Employee.Name</th>
					}
				</tr>
			</thead>
			<tbody>
				@{
					var day = ServiceRequest != null ? ServiceRequest.BeginTime.Date : date;
					var startHour = 9;
					var endHour = 18;
					var nowHour = startHour;
					var NowMin = 0;
					var step = ViewBag.TableTimeStep;
					var showedRequests = new List<object>();
				}
				@while (nowHour < endHour) {
					<tr>
						@{var time = day.AddHours(nowHour).AddMinutes(NowMin);}
						<th class="time left">@time.TimeOfDay.ToString().Substring(0, 5)</th>
						@foreach (ServiceMan employee in team) {
							var requestFlag = false;
							var cl = "employee" + employee.Id;
							//Отображение сервисных заявок
							foreach (var request in employee.ServiceRequests) {
								if (request.BeginTime <= time && request.EndTime >= time) {
									requestFlag = true;
									if (showedRequests.Contains(request)) {
										continue;
									}
									showedRequests.Add(request);
									//Надо вычислить сколько ячеек будет занимать наша запись
									var diff = request.EndTime - request.BeginTime;
									double span = Math.Ceiling(diff.TotalMinutes / step);
									<td class="@cl ServiceRequest request" rowspan="@span">
										<div class="description">
											<a href="@Url.Action("AttachServiceRequest","ConnectionTeam",new{requestId=@request.Id})">@request.Client.PhysicalClient.FullName</a>
										</div>
										<div class="contact">Тел:@request.Contact</div>
										<div class="address">@request.Client.GetAddress()</div>
										<div class="contact">@request.Description</div>
									</td>
								}
							}
							//Отображение заявок на подключение
							foreach (var request in employee.ConnectionRequests) {
								if (request.BeginTime <= time && request.EndTime >= time) {
									requestFlag = true;
									if (showedRequests.Contains(request)) {
										continue;
									}
									showedRequests.Add(request);
									//Надо вычислить сколько ячеек будет занимать наша запись
									var diff = request.EndTime.Value - request.BeginTime.Value;
									double span = Math.Floor(diff.TotalMinutes / step);
									<td class="@cl ClientRequest request" rowspan="@span">
										<div  class="description">
											<a href="@Url.Action("AttachConnectionRequest","ConnectionTeam",new{requestId=@request.Id})">@request.Client.Fullname</a>
										</div>
										<div  class="contact">Тел:@request.Client.PhoneNumber</div>
										<div  class="contact">@request.Comment</div>
										<div  class="address">@request.Client.GetAddress()</div>
									</td>
								}
							}
							if (!requestFlag) {
								var active = "";
								if (ServiceRequest != null && ServiceRequest.ServiceMan == employee && ServiceRequest.BeginTime == time)
								{
									active = "active";
								}
								<td class="@cl time @active">@time.TimeOfDay.ToString().Substring(0, 5)</td>
							}
						}

					</tr>
					NowMin += step;
					if (NowMin >= 60) {
						nowHour++;
						NowMin = 0;
					}
				}
			</tbody>
		</table>
	</div>
</div>