@using Inforoom2.Helpers
@using Inforoom2.Models
@using NHibernate

@{
	Client client = ViewBag.Client;
	bool rentIsActive = ViewBag.RentIsActive;
	ViewBag.Title = "Информация по клиенту: " + client.PhysicalClient.FullName + " (" + client.Id + ") ";
	Layout = "~/Views/Shared/_Layout.cshtml";
	string action = ViewBag.ActionName;
	string controller = ViewBag.ControllerName;
	List<SwitchAddress> networkNodeList = ViewBag.networkNodeList;
	Employee currentEmployeeForUserName = ViewBag.CurrentEmployee;
	string currentSubViewName = ViewBag.CurrentSubViewName;
}

@section JavaScript{
	<script type="text/javascript" src="@Url.Content("~/Scripts/ClientController.ClientRegistration.js")"></script>
	<script type="text/javascript" src="@Url.Content("~/Scripts/InfoClientPage.js?v=1")"></script>
}
<div class="panel panel-primary col-md-12">
	@if (!string.IsNullOrEmpty(currentSubViewName)) {
		<div>
			@Html.Hidden("currentSubViewName", currentSubViewName)
		</div>
	}
	<ul class="list-group InfoPhysicalNaviPan">
		<li class="list-group-item">
			<a id="PrivateMsgBtn" class="btn btn-success btn-sm btn-icon icon-left" href="@Url.Action("PrivateMessage", "ClientActions", new {id = client.Id})">
				<i class="entypo-plus-circled"></i>
				Приватное сообщение
			</a>
			<a class="btn btn-success btn-sm btn-icon icon-left" href="@Url.Action("ServiceRequestCreate", "ServiceRequest", new {@id = client.Id})">
				<i class="entypo-doc-text"></i>
				Сервисная заявка
			</a>
			<a class="btn btn-success btn-sm btn-icon icon-left" href="@Url.Action("AttachRequest", "ConnectionTeam", new {@id = client.Id, @type = "ClientConnectionRequest"})">
				<i class="entypo-briefcase"></i>
				Заявка на подключение
			</a>
			<a class="btn btn-success btn-sm btn-icon icon-left" target="_blank" href="@ConfigHelper.GetParam("inforoom2Url")Account/AdminLogin?clientId=@(client.Id)&username=@(currentEmployeeForUserName.Login)">
				<i class="entypo-key"></i>
				Войти в личный кабинет
			</a>

		</li>
		<li class="list-group-item">
			<a class="btn btn-success btn-sm btn-icon icon-left" href="@Url.Action("LeasesLog", "Client", new {@id = client.Id})">
				<i class="entypo-chart-area"></i>
				Статистика работы
			</a>
			<a class="btn btn-success btn-sm btn-icon icon-left" href="@Url.Action("ConnectionCard", "Client", new {@id = client.Id})">
				<i class="entypo-chart-area"></i>
				Наряд на подключение (обновление пароля)
			</a>
			<a class="btn @(rentIsActive ? "btn-red" : "btn-success") btn-sm btn-icon icon-left" href="@Url.Action("HardwareList", "HardwareRent", new {id = client.Id})">
				<i class="entypo-plus-circled"></i>
				Аренда оборудования
			</a>
			@if (rentIsActive) {
				<div style="width: 475px; font-weight: bold;">
					<br/>
					<p style="background-color: pink; color: black">ПРИ РАСТОРЖЕНИИ ДОГОВОРА КЛИЕНТ ДОЛЖЕН ВЕРНУТЬ ОБОРУДОВАНИЕ</p>
				</div>
			}

		</li>
	</ul>
</div>
<div class="panel panel-default" style="border-color: #ffffff;">
	<div class="panel-body">
		<div class="row">
			<div class="col-lg-6">
				@Html.Partial("subviews/_PrivateInfo", client)
				@Html.Partial("subviews/_PassportData", client)
				@Html.Partial("subviews/_Endpoint", client)
				@Html.Partial("subviews/_Payments", client)
				@Html.Partial("subviews/_WriteOffs", client)
			</div>
			<div class="col-lg-6">
				@Html.Partial("subviews/_Contacts", client)
				@Html.Partial("subviews/_Appeals", client)
				@Html.Partial("subviews/_UnresolvedCalls", client)
			</div>
		</div>
	</div>
</div>


<div class="panel panel-primary col-md-12">


	<div class="panel-body col-md-6">
		@if (networkNodeList != null && networkNodeList.Count > 0) {
			foreach (var node in networkNodeList) {
				<div class="form-group">
					<div class="col-sm-10">
						<h5>
							<strong>@node.NetworkNode.Name</strong>
						</h5>
						@foreach (var iswitch in node.NetworkNode.Switches) {
							<h5>@iswitch.Name</h5>
							<p>
								<span>Свободные порты: </span>@(iswitch.PortCount - @iswitch.Endpoints.Count)
							</p>
							<p>
								<span>Витые пары: </span>
								@if (iswitch.NetworkNode.TwistedPairs.Count > 0) {
									int countOfPairs = 0;
									for (int i = 0; i < iswitch.NetworkNode.TwistedPairs.Count; i++) {
										countOfPairs += iswitch.NetworkNode.TwistedPairs[i].PairCount;
										if (i > 0) {
											@Html.Raw(" + " + iswitch.NetworkNode.TwistedPairs[i].PairCount)
										}
										else {
											@Html.Raw(iswitch.NetworkNode.TwistedPairs[i].PairCount)
										}
										if (i == iswitch.NetworkNode.TwistedPairs.Count - 1) {
											@Html.Raw(" = " + countOfPairs)
										}
									}
								}
								else {
									@Html.Raw(" нет ")
								}
							</p>
						}
					</div>
				</div>
			}
		}
	</div>

</div>
<div style="clear: both;"></div>

@{
	if (ViewBag.SessionToRefresh != null) {
		var sessionToRefresh = (ISession) ViewBag.SessionToRefresh;
		sessionToRefresh.Refresh(client);
		sessionToRefresh.Refresh(client.PhysicalClient);
	}
}