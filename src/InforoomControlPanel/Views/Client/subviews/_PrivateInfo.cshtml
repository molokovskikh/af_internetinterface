@model Client
@using Inforoom2.Components
@using Inforoom2.Helpers
@using Inforoom2.Models
@{
	Layout = "";
	Client client = Model;
	List<Status> statusList = ViewBag.StatusList;
	List<Region> regionList = ViewBag.RegionList;
	List<Plan> planList = ViewBag.PlanList;
	var internetService = client.ClientServices.FirstOrDefault(s => s.Service.Name == "Internet");
	var isActivatedByUser = internetService != null ? internetService.ActivatedByUser : false;
}
<div class="panel panel-default blockJsLockControll">
@using (@Html.BeginForm("InfoPhysical", "Client", null, FormMethod.Post, new {@id = "ClientEditorForm", @class = "form-horizontal form-groups-bordered"})) {
	@Html.HiddenFor(o => client.Id)
	<input id="subViewName" name="subViewName" type="hidden" value="_PrivateInfo">
		@* Блок пустой *@
	<div id="emptyBlock_privateInfo" class="emptyBlock"></div>
}
@* Блок просмотра *@
<div id="defaultBlock_privateInfo" class="defaultBlock hid">
	<div class="panel-heading">
		<h3 class="panel-title bold">
			<a class="c-pointer" onclick="changeVisibility('emptyBlock_privateInfo')">Личная информация</a>
		</h3>
	</div>
	<div class="panel-body">
		<table id="table-2" class="table hiddenOverflow table-bordered table-striped datatable dataTable no-footer clientTable border-right-white" role="grid" aria-describedby="table-2_info">
			<tbody>
			<tr>
				<td>Номер лицевого счета</td>
				<td>
					<span>@client.Id</span>
				</td>
			</tr>
			<tr>
				<td>Город</td>
				<td>
					<span>@client.GetRegion().Name</span>
				</td>
			</tr>
			<tr>
				<td>
					<a class="c-pointer blue addressAjaxRunner" title="Изменение тарифа" data-toggle="modal" data-target="#ModelForAddress" onclick="StartAddressAjaxRunner(this)">Адрес подключения</a>
				</td>
				<td style="width: 60%;">
					<span>@client.PhysicalClient.Address.GetStringForPrint(city: false)</span>
				</td>
			</tr>
			<tr>
				<td>Дата регистрации</td>
				<td>
					<span>@(client.GetRegistrationDate().HasValue ? client.GetRegistrationDate().Value.ToString("dd.MM.yyyy") : "нет")</span>
				</td>
			</tr>
			<tr>
				<td>Зарегистрировал</td>
				<td>
					<span>@(client.WhoRegistered != null && client.WhoRegistered.Id != 0 ? client.WhoRegistered.Name : "нет")</span>
				</td>
			</tr>
			<tr>
				<td>
					<a class="c-pointer blue" title="Изменение тарифа" data-toggle="modal" data-target="#ModelForPlan">Тариф</a>
				</td>
				<td>
					<span>@(client.PhysicalClient.Plan != null ? client.PhysicalClient.Plan.Name + " (" + client.PhysicalClient.Plan.Price.ToString("0.00") + " р.)" : "нет")</span>
				</td>
			</tr>
			<tr>
				<td>Баланс</td>
				<td>
					<span>@client.PhysicalClient.Balance.ToString("0.00")</span>
				</td>
			</tr>
			<tr>
				<td>Денежных средств</td>
				<td>
					<span>@client.PhysicalClient.MoneyBalance.ToString("0.00")</span>
				</td>
			</tr>
			<tr>
				<td>Бонусов</td>
				<td>
					<span>@client.PhysicalClient.VirtualBalance.ToString("0.00")</span>
				</td>
			</tr>
			<tr>
				<td>Статус клиента</td>
				<td>
					<span>@client.Status.Name</span>
				</td>
			</tr>
			<tr>
				<td>СМС рассылка</td>
				<td>
					<span>@(client.SendSmsNotification ? "да" : "нет")</span>
				</td>
			</tr>
			<tr>
				<td>
					<a class="c-pointer blue" title="Возврат скидки" data-toggle="modal" data-target="#ModelForSale">Скидка</a>
				</td>
				<td>
					<span>@client.Discount.ToString("0.00")%</span>
				</td>
			</tr>

			@if (client.ConnectionRequest != null && client.ConnectionRequest.Status && client.ConnectionRequest.EndTime.HasValue) {
				<tr>
					<td>Дата начала расчетного периода</td>
					<td>
						<span>@client.ConnectionRequest.EndTime.Value.ToShortDateString()</span>
					</td>
				</tr>
			}

			@if (client.ClientRequest != null) {
				<tr>
					<td>Создан по заявке</td>
					<td>
						<a target="_blank" href="@(ConfigHelper.GetParam("adminPanelOld") + "ConnectionRequest/RequestOne?id=" + client.ClientRequest.Id)"> №@client.ClientRequest.Id</a>
					</td>
				</tr>
			}
			@if (client.RatedPeriodDate.HasValue) {
				<tr>
					<td>Дата начала расчетного периода</td>
					<td>
						<span>@client.RatedPeriodDate.Value.ToShortDateString()</span>
					</td>
				</tr>
			}
			<tr>
				<td>Количество бесплатных дней</td>
				<td>
					<span>@client.FreeBlockDays</span>
				</td>
			</tr>
			@if (client.YearCycleDate.HasValue) {
				if (client.FreeBlockDays > 0) {
					<tr>
						<td>Дата окончания периода использования бесплатных дней</td>
						<td>
							<span>@client.YearCycleDate.Value.AddDays(-1).ToShortDateString()</span>
						</td>
					</tr>
				}
				else {
					<tr>
						<td>Новые бесплатные дни станут доступны с</td>
						<td>
							<span>@client.YearCycleDate.Value.ToShortDateString()</span>
						</td>
					</tr>
				}
			}

			@if (client.StartNoBlock.HasValue) {
				<tr>
					<td>Дата начала программы скидок</td>
					<td>
						<span>@client.StartNoBlock.Value.ToShortDateString()</span>
					</td>
				</tr>
			}


			<tr>
				<td>Подключение</td>
				<td>
					@if (client.ConnectionRequest != null && client.ConnectionRequest.ServiceMan != null && client.ConnectionRequest.Status) {
						<a class="c-pointer" href="@Url.Action("AttachRequest", "ConnectionTeam", new {@Id = client.Id, @type = ServicemenScheduleItem.Type.ClientConnectionRequest})">
							<span>выполнил @client.ConnectionRequest.ServiceMan.Employee.Name - @(client.ConnectionRequest.EndTime.HasValue ? client.ConnectionRequest.EndTime.Value.ToString("dd.MM.yyyy HH:mm") : "")</span>
						</a>
					}
					else {
						if (client.ConnectionRequest != null && client.ConnectionRequest.ServiceMan != null && client.ConnectionRequest.Status == false) {
							<a class="c-pointer" href="@Url.Action("AttachRequest", "ConnectionTeam", new {@Id = client.Id, @type = ServicemenScheduleItem.Type.ClientConnectionRequest})">
								<span>выполняет @client.ConnectionRequest.ServiceMan.Employee.Name - @(client.ConnectionRequest.EndTime.HasValue ? client.ConnectionRequest.EndTime.Value.ToString("dd.MM.yyyy HH:mm") : "")</span>
							</a>
						}
						else {
							<a class="c-pointer" href="@Url.Action("AttachRequest", "ConnectionTeam", new {@Id = client.Id, @type = ServicemenScheduleItem.Type.ClientConnectionRequest})">не назначено</a>
						}
					}
				</td>
			</tr>
			<tr>
				<td>Проверен</td>
				<td>
					<span>@(client.PhysicalClient.Checked ? "да" : "нет")</span></td>
			</tr>
			</tbody>
		</table>
	</div>
	<div class="panel-body" style="padding-top: 0px;">
		<a class="btn btn-blue lockButton">Редактировать</a>
	</div>
</div>
@* Блок редактирования *@
<div id="editBlock_privateInfo" class="editBlock hid">
	<div class="panel-heading">
		<h3 class="panel-title bold">
			<a class="c-pointer" onclick="changeVisibility('emptyBlock_privateInfo')">Личная информация (редактирование)</a>
		</h3>
	</div>
	<div class="panel-body">
		<table id="table-2" class="table table-bordered table-striped datatable dataTable no-footer clientTable" role="grid" aria-describedby="table-2_info">
			<tbody>
			<tr>
				<td style="max-width: 60px;">Фамилия</td>
				<td>
					@Html.TextBoxFor(o => client.Surname, new {@class = "form-control"})
					@ViewBag.Validation.GetError(client.PhysicalClient, "Surname")</td>
			</tr>
			<tr>
				<td style="max-width: 80px;">Имя</td>
				<td>
					@Html.TextBoxFor(o => client.PhysicalClient.Name, new {@class = "form-control"})
					@ViewBag.Validation.GetError(client.PhysicalClient, "Name")</td>
			</tr>
			<tr>
				<td style="max-width: 60px;">Отчество</td>
				<td>
					@Html.TextBoxFor(o => client.PhysicalClient.Patronymic, new {@class = "form-control"})
					@ViewBag.Validation.GetError(client.PhysicalClient, "Patronymic")</td>
			</tr>
			<tr>
				<td style="max-width: 60px;">Статус</td>
				<td>
					@Html.DropDownListExtendedFor(o => client.Status, statusList, obj => obj.Name, null, new {@Name = "clientStatus", @class = "form-control"}, client.Status.Id)
					@ViewBag.Validation.GetError(client, "Status")
				</td>
			</tr>
			<tr>
				<td style="max-width: 60px;">
					<label class="c-pointer" for="sendSmsNotification">СМС рассылка</label>
				</td>
				<td>
					@Html.CheckBoxFor(o => client.SendSmsNotification, new {@class = "c-pointer", id = "sendSmsNotification"})
				</td>
			</tr>
			<tr>
				<td style="max-width: 60px;">Задача в Redmine для клиента</td>
				<td>
					@Html.TextBoxFor(o => client.RedmineTask, new {@class = "form-control"})
				</td>
			</tr>
			<tr>
				<td style="max-width: 60px;">
					<label class="c-pointer" for="clientToBeChecked">Проверен</label>
				</td>
				<td>
					@Html.CheckBoxFor(o => client.PhysicalClient.Checked, new {@class = "c-pointer", id = "clientToBeChecked"})
				</td>
			</tr>
			</tbody>
		</table>
	</div>
	<div class="panel-body" style="padding-top: 0px;">
		<div class="col">
			<button type="submit" class="btn btn-green">Сохранить</button>
			<a class="btn btn-red unlockButton">Отмена</a>
		</div>
	</div>
</div>
</div>

<!-- Modal For Plan-->
<div class="modal fade" id="ModelForPlan" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			@using (@Html.BeginForm("ChangePlan", "Client", null, FormMethod.Post, new {@id = "ClientEditorForm", @class = "form-horizontal form-groups-bordered"})) {
				@Html.HiddenFor(o => client.Id)
				<input id="subViewName" name="subViewName" type="hidden" value="_PrivateInfo">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
					<h4 class="modal-title" id="myModalLabel">Изменение тарифа</h4>
				</div>
				<div class="modal-body">
					<table id="table-2" class="table table-bordered table-striped datatable dataTable no-footer clientTable" role="grid" aria-describedby="table-2_info">
						<tbody>
						<tr>
							<td style="max-width: 60px;">Тариф</td>
							<td>
								@Html.DropDownListExtendedFor(i => client.Plan, planList, obj => obj.Name + " (" + obj.Price.ToString("0.00") + " р.)", null,
									new {@class = "form-control", @Name = "plan"}, client.Plan != null ? client.Plan.Id : 0, false)
							</td>
						</tr>
						<tr>
							<td style="max-width: 80px;">
								<label class="c-pointer" for="IsActivatedByUser">Подключить</label>
							</td>
							<td>
								@Html.CheckBoxFor(o => isActivatedByUser, new {@Name = "isActivatedByUser", @class = "c-pointer", id = "IsActivatedByUser"})
							</td>
						</tr>
						</tbody>
					</table>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
					<button type="submit" class="btn btn-success">Сохранить</button>
				</div>
			}
		</div>
	</div>
</div>
<!-- Modal For Sale -->
<div class="modal fade" id="ModelForSale" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			@using (@Html.BeginForm("GetLastSale", "Client", null, FormMethod.Post, new {@id = "ClientEditorForm", @class = "form-horizontal form-groups-bordered"})) {
				@Html.Hidden("clientId", client.Id)
				<input id="subViewName" name="subViewName" type="hidden" value="_PrivateInfo">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
					<h4 class="modal-title" id="myModalLabel">Возврат скидки</h4>
				</div>
				<div class="modal-body">
					<p>Для восстановление скидки укажите причину.</p>
					<p>
						<input class="form-control" name="comment" type="text" value="" placeholder="Причина восстановления скидки">
					</p>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
					<button type="submit" class="btn btn-success">Применить</button>
				</div>
			}
		</div>
	</div>
</div>
<!-- Modal For Address -->
<div class="modal fade" id="ModelForAddress" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-sm">
		<div class="modal-content">
			@using (@Html.BeginForm("ChangeAddress", "Client", null, FormMethod.Post, new {@id = "ClientEditorForm", @class = "form-horizontal form-groups-bordered"})) {
				@Html.HiddenFor(o => client.Id)
				<input id="subViewName" name="subViewName" type="hidden" value="_PrivateInfo">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
					<h4 class="modal-title" id="myModalLabel">Изменение адреса</h4>
				</div>
				<div class="modal-body">
					<div class="panel-body addressFilterBlock">
						<div class="panel-body" style="padding: 0px;">
							<div class="row">
								<div>
									<span class="addressDetails top-bottom">Регион</span>
									@Html.DropDownListExtendedFor(i => client.GetRegion(), regionList, obj => obj.Name, null,
										new {@class = "form-control", @Id = "RegionDropDown", @Name = "RegionDropDown_name"}, client.GetRegion() != null ? client.GetRegion().Id : 0, true)
									<span class="addressDetails top-bottom">Улица</span> <select id="StreetDropDown" class="form-control form-control addressSearch" value="@client.Address.House.Street.Id"></select>
									<span class="addressDetails top-bottom">Дом</span> <select id="HouseDropDown" class="form-control form-control addressSearch" name="houseId" value="@client.Address.House.Id"></select>
								</div>
								<div>
									<span class="addressDetails top-bottom">Квартира</span> 
									@Html.TextBoxFor(o => client.PhysicalClient.Address.Apartment, new {@class = "form-control", @Name = "apartment"})
									@ViewBag.Validation.GetError(client.PhysicalClient.Address, "Apartment")
									<span class="addressDetails top-bottom">Подъезд</span>
									@Html.TextBoxFor(o => client.PhysicalClient.Address.Entrance, new {@class = "form-control", @Name = "entrance"})
									@ViewBag.Validation.GetError(client.PhysicalClient.Address, "Entrance")
									<span class="addressDetails top-bottom">Этаж</span>
									@Html.TextBoxFor(o => client.PhysicalClient.Address.Floor, new {@class = "form-control", @Name = "floor", @Type = "number", @Min = "0"})
									@ViewBag.Validation.GetError(client.PhysicalClient.Address, "Floor")
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-default" data-dismiss="modal" onclick="StopAddressAjaxRunner(this)">Закрыть</button>
					<button type="submit" class="btn btn-success">Сохранить</button>
				</div>
			}
		</div>
	</div>
</div>