@section JavaScript{
	<script type="text/javascript" src="@Url.Content("~/Scripts/ClientRequest.js")"></script>
	<script type="text/javascript" src="@Url.Content("~/Scripts/ClientController.ClientRegistration.js")"></script>
} 
@using Inforoom2.Components
@using Inforoom2.Helpers
@using Inforoom2.Models

@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Title = "Заявка на регистрацию";
	ClientRequest clientRequest = ViewBag.ClientRequest;
	var reqAuthor = clientRequest.RequestAuthor ?? new Employee();
	List<Employee> employees = ViewBag.Employees;
	List<Plan> plans = ViewBag.PlanList;
	ValidationRunner validationRunner = ViewBag.Validation;
	bool isRedirected = ViewBag.IsRedirected;
	bool isCityValidated = ViewBag.IsCityValidated;
	bool isStreetValidated = ViewBag.IsStreetValidated;
	bool isHouseValidated = ViewBag.IsHouseValidated;
	string action = ViewBag.ActionName;
	string controller = ViewBag.ControllerName;


	List<Region> regionList = ViewBag.RegionList;
	List<Street> currentStreetList = ViewBag.CurrentStreetList;
	List<House> currentHouseList = ViewBag.CurrentHouseList;
	Region currentRegion = ViewBag.CurrentRegion;
	Street currentStreet = ViewBag.CurrentStreet;
	House currentHouse = ViewBag.CurrentHouse;
}

<link rel="stylesheet" href="~/Css/from_inforoom2.css"/>
<script type="text/javascript" src="http://api-maps.yandex.ru/2.1/?lang=ru_RU"></script>

<div class="panel panel-primary col-md-12">
	<div class="panel-body">
		@using (@Html.BeginForm(action, controller, FormMethod.Post)) {
			<div>
				<div class="personals">Ф.И.О:</div>
				@Html.ValidationEditor(validationRunner, clientRequest, "ApplicantName", new { @class = "personal" }, HtmlTag.input, HtmlType.text)
			</div>
			<div>
				<div class="personals">Номер телефона:</div>
				@Html.ValidationEditor(validationRunner, clientRequest, "ApplicantPhoneNumber", new { @class = "personal", placeholder = "Введите номер в десятизначном формате" }, HtmlTag.input, HtmlType.text)
			</div>
			<div>
				<div class="personals">Электронная почта:</div>
				@Html.ValidationEditor(validationRunner, clientRequest, "Email", new { }, htmlTag: HtmlTag.input, htmlType: HtmlType.text) 
			</div>
			<div class="panel panel-default">
				<div class="panel-body">
					<div class="row">
						<div class="col-lg-4">
							<div class="row error">
								<label class="col-sm-3@(currentRegion == null ? " bold msg" : "")">Город:</label>
								<div class="col-sm-6">
									@if (currentRegion != null) {
										@Html.DropDownListExtendedFor(i => clientRequest.Address.House.Street.Region, regionList, obj => obj.Name, null,
											new {
												@class = "form-control", @Id = "RegionDropDown",
												@Name = "client.PhysicalClient.Address.House.Street.Region.Id",
												onclick = "typeWatcher(1000)"
											}, currentRegion.Id, true)
									}
									else {
										@Html.DropDownListExtendedFor(i => clientRequest.Address.House.Street.Region, regionList, obj => obj.Name, null,
											new {
												@class = "form-control", @Id = "RegionDropDown",
												@Name = "client.PhysicalClient.Address.House.Street.Region.Id",
												onclick = "typeWatcher(1000)"
											}, true)
									}
								</div>
							</div>

							<div class="row error">
								<label class="col-sm-3@(currentStreet == null ? " bold msg" : "")">Улица:</label>
								<div class="col-sm-6">
									@if (currentStreet != null) {
										@Html.DropDownListExtendedFor(i => clientRequest.Address.House.Street, currentStreetList, obj => obj.Name, null,
											new {
												@class = "form-control", @Id = "StreetDropDown",
												@Name = "client.PhysicalClient.Address.House.Street.Id",
												onclick = "typeWatcher(1000)"
											}, currentStreet.Id, true)
									}
									else {
										@Html.DropDownListExtendedFor(i => clientRequest.Address.House.Street, currentStreetList, obj => obj.Name, null,
											new {
												@class = "form-control", @Id = "StreetDropDown",
												@Name = "client.PhysicalClient.Address.House.Street.Id",
												onclick = "typeWatcher(1000)"
											}, true)
									}
								</div>
							</div>

							<div class="row error">
								<label class="col-sm-3@(currentHouse == null ? " bold msg" : "")">Дом:</label>
								<div class="col-sm-6">
									@if (currentHouse != null && currentHouseList != null) {
										@Html.DropDownListExtendedFor(i => clientRequest.Address.House, currentHouseList, obj => obj.Number, null, new {
											@class = "form-control",
											@Id = "HouseDropDown",
											@Name = "client.PhysicalClient.Address.House.Id",
											onclick = "typeWatcher(1000)"
										}, currentHouse.Id, true)
									}
									else {
										@Html.DropDownListExtendedFor(i => clientRequest.Address.House, currentHouseList, obj => obj.Number, null, new {
											@class = "form-control",
											@Id = "HouseDropDown",
											@Name = "client.PhysicalClient.Address.House.Id",
											onclick = "typeWatcher(1000)"
										}, true)
									}
								</div>
							</div>

						</div>
					</div>
				</div>

			</div> 
			<div class="block">
				<div class="addon">Квартира:</div>
				@Html.ValidationEditor(validationRunner, clientRequest, "Apartment", new { @class = "addons" }, HtmlTag.input, HtmlType.text)
			</div>
			<div class="block">
				<div class="addon">Подъезд:</div>
				@Html.ValidationEditor(validationRunner, clientRequest, "Entrance", new { @class = "addons" }, HtmlTag.input, HtmlType.text)
			</div>
			<div class="block">
				<div class="addon">Этаж:</div>
				@Html.ValidationEditor(validationRunner, clientRequest, "Floor", new { @class = "addons" }, HtmlTag.input, HtmlType.text)
			</div>
			<div class="panel panel-default">
				<div class="panel-body">
					<div class="row">
						<div class="col-lg-4">
							<div class="row error">
								<label class="col-sm-3 control-label @(clientRequest.Plan == null ? " bold msg" : "")">Тариф:</label>
								<div class="col-sm-6">
									@if (clientRequest.Plan != null) {
										@Html.DropDownListExtendedFor(i => clientRequest.Plan, plans, obj => obj.Name, null, new { @class = "form-control", @Id = "PlanDropDown" }, clientRequest.Plan.Id, true)
										@ViewBag.Validation.GetError(clientRequest, "Plan")
									}
									else {
										@Html.DropDownListExtendedFor(i => clientRequest.Plan, plans, obj => obj.Name, null, new { @class = "form-control", @Id = "PlanDropDown" }, true)
										@ViewBag.Validation.GetError(clientRequest, "Plan")
									}
								</div>
							</div> 
						</div>
					</div>
				</div> 
			</div>
			<div>
				<div id="yandexMap" class="map"></div>
				<div class="contract">
					@Html.HiddenFor(k => clientRequest.IsContractAccepted)
				</div>
				@Html.HiddenFor(k => clientRequest.YandexCity, new { id = "yandexCityHidden" })
				@Html.HiddenFor(k => clientRequest.YandexStreet, new { id = "yandexStreetHidden" })
				@Html.HiddenFor(k => clientRequest.YandexHouse, new { id = "yandexHouseHidden" })
			</div>

			<input class="btn btn-green" type="submit" value="Отправить">
		}
	</div>
</
	div >
