@using Inforoom2.Helpers
@using Inforoom2.Models
@model dynamic
@{
  ViewBag.Title = "Редактирование платежа";
  Layout = "~/Views/Shared/_Layout.cshtml";
  BankPayment bankPayment = ViewBag.BankPayment;
  List<Recipient> recipientList = ViewBag.RecipientList;
  var editPaymentWithoutPayer = (bool)( ViewBag.EditPaymentWithoutPayer ??false);
  var currentSum = bankPayment.Sum.ToString("0.00");
  var updatePayerInn = true;

}
@section JavaScript{
	<script type="text/javascript" src="@Url.Content("~/Scripts/PaymentsCalendarFilter.js?v=1")"></script>
}
<div class="panel panel-primary">
	<div class="panel-body">
		<div class="col-md-6">
			@if (!string.IsNullOrEmpty(bankPayment.PayerName) || !string.IsNullOrEmpty(bankPayment.PayerInn) || !string.IsNullOrEmpty(bankPayment.PayerAccountCode)) {
				<h3>Отправитель</h3>
				<table class="table table-bordered table-striped datatable dataTable no-footer">
					<tr>
						<td>
							<label class="control-label">Наименование</label>
						</td>
						<td>
							<span>@bankPayment.PayerName</span></td>
					</tr>
					<tr>
						<td>
							<label class="control-label">ИНН</label>
						</td>
						<td>
							<span>@bankPayment.PayerInn</span></td>
					</tr>
					<tr>
						<td>
							<label class="control-label">Номер счета</label>
						</td>
						<td>
							<span>@bankPayment.PayerAccountCode</span></td>
					</tr>
				</table>
			}
			@if (!string.IsNullOrEmpty(bankPayment.PayerBankDescription) || !string.IsNullOrEmpty(bankPayment.PayerBankBic) || !string.IsNullOrEmpty(bankPayment.PayerBankAccountCode)) {
				<h3>Банк отправителя</h3>
				<table class="table table-bordered table-striped datatable dataTable no-footer">
					<tr>
						<td>
							<label class="control-label">Наименование</label>
						</td>
						<td>
							<span>@bankPayment.PayerBankDescription</span></td>
					</tr>
					<tr>
						<td>
							<label class="control-label">БИК</label>
						</td>
						<td>
							<span>@bankPayment.PayerBankBic</span></td>
					</tr>
					<tr>
						<td>
							<label class="control-label">Номер счета</label>
						</td>
						<td>
							<span>@bankPayment.PayerBankAccountCode</span> </td>
					</tr>
				</table>
			}
			@if (!string.IsNullOrEmpty(bankPayment.Comment)) {
				<table class="table table-bordered table-striped datatable dataTable no-footer">
					<tr>
						<td>
							<strong class="control-label">Примечание</strong>
						</td>
						<td>
							<span>@bankPayment.Comment</span></td>
					</tr>
				</table>
			}
			@using (@Html.BeginForm()) {
			  
				@Html.Hidden("oldPaymentId", bankPayment.Id)
				@Html.Hidden("bankPayment.Id", bankPayment.GetHashCode())
				<table class="table table-bordered table-striped datatable dataTable no-footer">
					<tr>
						<td style="width: 240px;">
							<label class="control-label">Дата</label>
						</td>
						<td>
							@Html.TextBoxFor(o => bankPayment.PayedOn, bankPayment.PayedOn.ToString("dd.MM.yyyy"),
								new
								{
									@Name = "bankPayment.PayedOn",
									@data_format = "dd.mm.yyyy",
									@class = "form-control",
									@data_provide = "datepicker-inline",
									@required = "required"
								})
							@ViewBag.Validation.GetError(bankPayment, "PayedOn")
						</td>
					</tr>
					<tr>
						<td>
							<label class="control-label">Сумма</label>
						</td>
						<td>
							@Html.TextBoxFor(model => currentSum, new { @Name = "bankPayment.Sum", @class = "form-control", Type = "numeric", @required = "required", @Step="any"})
							@ViewBag.Validation.GetError(bankPayment, "Sum")
						</td>
					</tr>
					<tr>
						<td>
							<label class="control-label">№ документа</label>
						</td>
						<td>
							@Html.TextBoxFor(model => bankPayment.DocumentNumber, new {@class = "form-control", Type = "numeric", @required = "required"})
							@ViewBag.Validation.GetError(bankPayment, "DocumentNumber")
						</td>
					</tr>
					<tr>
						<td>
							<label class="control-label">Получатель</label>
						</td>
						<td>
							@Html.DropDownListExtendedFor(i => bankPayment.Recipient, recipientList, obj => obj.Name, null, new {@class = "form-control", @required = "required"}, bankPayment.Recipient != null ? bankPayment.Recipient.Id.ToString() : "0")
							@ViewBag.Validation.GetError(bankPayment, "Recipient")</td>
					</tr>
					<tr>
						<td>
							<label class="control-label">Плательщик</label>
						</td>
						<td>
							<input class="form-control" name="bankPayment.Payer.Id" id="clientReciverId" onkeyup="getPaymentReciver('#clientReciverId', '#clientReciverMessage', true, 2);" value="@(bankPayment.Payer != null ? bankPayment.Payer.Id.ToString() : "")" @(editPaymentWithoutPayer ? "" : "required")/>
							<div id="clientReciverMessage">
								<div style="height: 100px; overflow-y: scroll; border-top: 1px solid #E8E8E8; border-bottom: 1px solid #E8E8E8;">
									<ul style="list-style: none;">
										@if (bankPayment.Payer != null){
											<li><strong class="c-pointer" onclick="getPaymentClientIdUpdate('#clientReciverId', this);" recipient="7">@bankPayment.Payer.Id</strong> - <a class="idColumn linkLegal" target="_blank" href="@Url.Action("InfoLegal", "Client", new {id = bankPayment.Payer.Id})">@bankPayment.Payer._Name</a></li>
										}
									</ul>
								</div>
							</div>
							@ViewBag.Validation.GetError(bankPayment, "Payer")
						</td>
					</tr>	
					<tr>
						<td>
							<label class="control-label">Примечание</label>
						</td>
						<td>
							@Html.TextBoxFor(model => bankPayment.OperatorComment, new {@class = "form-control"})
							@ViewBag.Validation.GetError(bankPayment, "OperatorComment")
						</td>
					</tr>
					<tr>
						<td>
							<label class="control-label c-pointer" for="isToBeUpdated">
								<strong>Обновить ИНН плательщика</strong>
							</label>
						</td>
						<td>@Html.CheckBoxFor(model =>updatePayerInn, new {@Name= "bankPayment.UpdatePayerInn", @id = "isToBeUpdated", @class = "c-pointer"})</td>
					</tr>
				</table>
				<div class="form-group">
					<button class="btn btn-green" type="submit">Сохранить</button>
				</div>
			}
		</div>
	</div>
</div>

<div class="form-group">
	<button class="btn btn-blue" onclick=" location.href = '@Url.Action("PaymentList", "Payments")' ">Назад</button>
</div>