@using Inforoom2.Helpers
@using Inforoom2.Models
@using NPOI.SS.Formula.Functions
@model dynamic

@{
	ViewBag.Title = "Тарифный план";
	Layout = "~/Views/Shared/_Layout.cshtml";
	Plan plan = ViewBag.Plan;
	List<PackageSpeed> speed = ViewBag.PackageSpeed;
	PackageSpeed currentSpeed = plan.PackageSpeed ?? new PackageSpeed();
}
<div class="panel panel-primary">
	<div class="panel-body">
		<div class="col-md-6">
			@using (@Html.BeginForm("CreatePlan", "Plans", FormMethod.Post, new { @class = "form-horizontal form-groups-bordered" })) {
				<div class="form-group">
					@Html.HiddenFor(model => plan.Id)
					<label class="col-sm-3 control-label" for="field-ta">Название</label>
					<div class="col-sm-5">
						@Html.TextBoxFor(model => plan.Name, new { @class = "form-control" })
						@ViewBag.Validation.GetError(plan, "Name", "Имя не может быть пустым")
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label" for="field-ta">Скорость</label>
					<div class="col-sm-5">
						@Html.DropDownListExtendedFor(i => plan.PackageSpeed, speed, obj => obj.GetSpeed() + " (" + obj.Description + ")", null, new { @class = "form-control" }, currentSpeed.Id)
						@ViewBag.Validation.GetError(plan, "PackageSpeed")
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label" for="field-ta">Стоимость</label>
					<div class="col-sm-5">
						@Html.TextBoxFor(model => plan.Price, new { @class = "form-control" })
						@ViewBag.Validation.GetError(plan, "Price")
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label" for="field-ta">Стоимость (альтернативный HTML)</label>
					<div class="col-sm-5">
						@Html.TextBoxFor(model => plan.TextPrice, new { @class = "form-control" })
						@ViewBag.Validation.GetError(plan, "TextPrice")
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer" for="withBonus">Без скидки</label>
					<div class="col-sm-5">
						@Html.CheckBoxFor(model => plan.IgnoreDiscount, new { @id = "withBonus", @class = "c-pointer" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer" for="Disabled">Архивный</label>
					<div class="col-sm-5">
						@Html.CheckBoxFor(model => plan.Disabled, new { @id = "Disabled", @class = "c-pointer" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer" for="AvailableForNewClients">Отображен на странице "Тарифы"</label>
					<div class="col-sm-5">
						@Html.CheckBoxFor(model => plan.AvailableForNewClients, new { @id = "AvailableForNewClients", @class = "c-pointer" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer" for="AvailableForOldClients">Отображен на странице "Личный кабинет"</label>
					<div class="col-sm-5">
						@Html.CheckBoxFor(model => plan.AvailableForOldClients, new { @id = "AvailableForOldClients", @class = "c-pointer" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer">Заголовок</label>
					<div class="col-sm-5">
						@Html.TextAreaFor(model => plan.Features, new { @class = "form-control" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer">Содержание</label>
					<div class="col-sm-5">
						@Html.TextAreaFor(model => plan.Description, new { @class = "form-control", @Rows = "7" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer">Комментарии</label>
					<div class="col-sm-5">
						@Html.TextAreaFor(model => plan.Comments, new { @class = "form-control", @Rows = "5" })
					</div>
				</div>
				<div class="form-group">
					<button class="btn btn-green" type="submit">Сохранить</button>
				</div>
			}
		</div>

		@*
			<div class="col-md-6">
				@if(plans.Count > 0) {
				<div class="col-sm-12">
					<h4>Создать стоимость перехода:</h4>
				</div>
				<div class="col-sm-12 ">
					@using (@Html.BeginForm("AddPlanTransfer", "Plans", FormMethod.Post, new { @class = "form-horizontal form-groups-bordered col-sm-12" })) {
						<div class="form-group">
							<div class="col-sm-5">Тарифный план</div>
							<div class="col-sm-2">Стоимость</div>
							<div class="col-sm-2"></div>
						</div>
						<div class="form-group">
							@Html.HiddenFor(i=>PlanTransfer.PlanFrom.Id)
							<div class="col-sm-5">
								@Html.DropDownListExtendedFor(i=>PlanTransfer.PlanTo,plans,obj=>obj.Name,null,new {@class = "form-control"})
								@ViewBag.Validation.GetError(PlanTransfer, "PlanTo")
							</div>
							<div class="col-sm-2">
								@Html.TextBoxFor(model => PlanTransfer.Price,new {@class = "form-control", style="width: 50px;"})
								@ViewBag.Validation.GetError(PlanTransfer, "Speed")
							</div>
							<div class="col-sm-2">
								<button class="btn btn-green" type="submit">Добавить</button>
							</div>
						</div>
					}
				</div>
				}
				<div class="col-sm-12">
					<h4>Стоимости переходов на другие тарифы:</h4>
				</div>
				<div class="form-group">
					<div class="col-sm-5">Тарифный план</div>
					<div class="col-sm-2">Стоимость</div>
					<div class="col-sm-2">Действия</div>
				</div>
				@foreach (var item in plan.PlanTransfers) {
					<div class="form-group">
						<div class="col-sm-5">
							@item.PlanTo.Name
						</div>
						<div class="col-sm-2">
							@item.Price.ToString("F2")
						</div>
						<div class="col-sm-2">
							<a class="entypo-cancel-circled" style="color:red" href="@Url.Action("DeletePlanTransfer","Plans",new {id = item.Id })"></a>
						</div>
					</div>
				}
			</div>
		*@
	</div>
</div>

<div class="form-group">
</div>
<button class="btn btn-blue" onclick=" location.href = '@Url.Action("PlanIndex", "Plans")' ">Назад</button>