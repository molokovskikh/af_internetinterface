 
@using Inforoom2.Helpers
@using Inforoom2.Models
@using NPOI.SS.Formula.Functions
@model dynamic

@{
	ViewBag.Title = "Тарифный план";
	Layout = "~/Views/Shared/_Layout.cshtml";
	Plan plan = ViewBag.Plan;
	PlanTransfer PlanTransfer = ViewBag.PlanTransfer;
	IList<Plan> plans = ViewBag.Plans;
	IList<Region> regions = ViewBag.Regions;
	RegionPlan RegionPlan = ViewBag.RegionPlan;
	List<PackageSpeed> speed = ViewBag.PackageSpeed;
	PackageSpeed currentSpeed = plan.PackageSpeed ?? new PackageSpeed();
	List<TvChannelGroup> tvChannelGroups = ViewBag.TvChannelGroups ?? new List<TvChannelGroup>();
}
<div class="panel panel-primary">
	<div class="panel-body">
		<div class="col-md-6">
			@using (@Html.BeginForm("EditPlan", "Plans", FormMethod.Post, new { @class = "form-horizontal form-groups-bordered" })) {
				<div class="form-group">
					@Html.HiddenFor(model => plan.Id)
					<label class="col-sm-3 control-label" for="field-ta">Название</label>
					<div class="col-sm-5">
						@Html.TextBoxFor(model => plan.Name, new { @class = "form-control" })
						@ViewBag.Validation.GetError(plan, "Name", "Имя не может быть пустым")
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label" for="field-ta">Скорость</label>
					<div class="col-sm-5">
						@Html.DropDownListExtendedFor(i => plan.PackageSpeed, speed, obj => obj.GetSpeed().ToString(), null, new { @class = "form-control" }, currentSpeed.Id)
						@ViewBag.Validation.GetError(plan, "PackageSpeed")
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label" for="field-ta">Стоимость</label>
					<div class="col-sm-5">
						@Html.TextBoxFor(model => plan.Price, new { @class = "form-control" })
						@ViewBag.Validation.GetError(plan, "Price")
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label" for="field-ta">Стоимость (альтернативный HTML)</label>
					<div class="col-sm-5">
						@Html.TextBoxFor(model => plan.TextPrice, new { @class = "form-control" })
						@ViewBag.Validation.GetError(plan, "TextPrice")
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer" for="withBonus">Без скидки</label>
					<div class="col-sm-5">
						@Html.CheckBoxFor(model => plan.IgnoreDiscount, new { @id = "withBonus", @class = "c-pointer" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer" for="Disabled">Архивный</label>
					<div class="col-sm-5">
						@Html.CheckBoxFor(model => plan.Disabled, new { @id = "Disabled", @class = "c-pointer" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer" for="AvailableForNewClients">Отображен на странице "Тарифы"</label>
					<div class="col-sm-5">
						@Html.CheckBoxFor(model => plan.AvailableForNewClients, new { @id = "AvailableForNewClients", @class = "c-pointer" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer" for="AvailableForOldClients">Отображен на странице "Личный кабинет"</label>
					<div class="col-sm-5">
						@Html.CheckBoxFor(model => plan.AvailableForOldClients, new { @id = "AvailableForOldClients", @class = "c-pointer" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer">Заголовок</label>
					<div class="col-sm-5">
						@Html.TextAreaFor(model => plan.Features, new { @class = "form-control" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer">Содержание</label>
					<div class="col-sm-5">
						@Html.TextAreaFor(model => plan.Description, new { @class = "form-control", @Rows = "7" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-3 control-label c-pointer">Комментарии</label>
					<div class="col-sm-5">
						@Html.TextAreaFor(model => plan.Comments, new { @class = "form-control", @Rows = "5" })
					</div>
				</div>
				<div class="form-group">
					<button class="btn btn-green save" type="submit">Принять изменения</button>
				</div>
   }
		</div>
		<div class="col-md-6">
			@if (plans.Count > 0) {
				<div class="col-sm-12">
					<h4>Создать стоимость перехода:</h4>
				</div>
				<div class="col-sm-12 ">
					@using (@Html.BeginForm("AddPlanTransfer", "Plans", FormMethod.Post, new { @class = "form-horizontal form-groups-bordered col-sm-12" })) {
						<div class="form-group">
							<div class="col-sm-5">Тарифный план</div>
							<div class="col-sm-2">Стоимость</div>
							<div class="col-sm-2"></div>
						</div>
						<div class="form-group">
							@Html.HiddenFor(i => PlanTransfer.PlanFrom.Id)
							<div class="col-sm-5">
								@Html.DropDownListExtendedFor(i => PlanTransfer.PlanTo, plans, obj => obj.Name +" ("+ obj.Price+" руб.)", null, new { @class = "form-control" })
								@ViewBag.Validation.GetError(PlanTransfer, "PlanTo")
							</div>
							<div class="col-sm-2">
								@Html.TextBoxFor(model => PlanTransfer.Price, new { @class = "form-control", style = "width: 50px;" })
								@ViewBag.Validation.GetError(PlanTransfer, "Speed")
							</div>
							<div class="col-sm-2">
								<button class="btn btn-green addPrice" type="submit">Добавить</button>
							</div>
						</div>
					}
				</div>
			}
			<div class="col-sm-12">
				<h4>Стоимости переходов на другие тарифы:</h4>
			</div>
			<div class="form-group">
				<div class="col-sm-5">Тарифный план</div>
				<div class="col-sm-2">Стоимость</div>
				<div class="col-sm-2">Действия</div>
			</div>
			@foreach (var item in plan.PlanTransfers) {
				<div class="form-group">
					<div class="col-sm-5">
						@(item.PlanTo.Name + " (" + item.PlanTo.Price + " руб.)")
					</div>
					<div class="col-sm-2">
						@item.Price.ToString("F2")
					</div>
					<div class="col-sm-2">
						<a class="entypo-cancel-circled" style="color: red" href="@Url.Action("DeletePlanTransfer", "Plans", new { id = item.Id })"></a>
					</div>
				</div>
			}
		</div>
		<div class="col-md-6">
			@if (regions.Count > 0) {
				<div class="col-sm-12">
					<h4>Добавить pегион:</h4>
				</div>
				<div class="col-sm-12 ">
					@using (@Html.BeginForm("AddRegionPlan", "Plans", FormMethod.Post, new { @class = "form-horizontal form-groups-bordered col-sm-12" })) {
						<div class="form-group">
							@Html.HiddenFor(i => RegionPlan.Plan.Id)
							<div class="col-sm-5">
								@Html.DropDownListExtendedFor(i => RegionPlan.Region, regions, obj => obj.Name, null, new { @class = "form-control" })
								@ViewBag.Validation.GetError(RegionPlan, "Region")
							</div>
							<div class="col-sm-2">
							</div>
							<div class="col-sm-2">
								<button class="btn btn-green addRegion" type="submit">Добавить</button>
							</div>
						</div>
					}
				</div>
			}
			@if (plan.RegionPlans.Count > 0) {
				<div class="col-sm-12">
					<h4>Тариф доступен в регионах:</h4>
				</div>
				foreach (var item in plan.RegionPlans) {
					<div class="form-group">
						<div class="col-sm-5 region">
							@item.Region.Name
						</div>
						<div class="col-sm-2">
						</div>
						<div class="col-sm-2">
							<a class="entypo-cancel-circled" style="color: red" href="@Url.Action("DeleteRegion", "Plans", new { id = item.Id })"></a>
						</div>
					</div>
				}
			}

		</div>
		<div class="col-md-6">
			@if (tvChannelGroups.Count > 0) {
				<div class="col-sm-12">
					<h4>Добавить канал:</h4>
				</div>
				<div class="col-sm-12 ">
					@using (@Html.BeginForm("AttachTvChannelGroup", "Plans", new { id = plan.Id }, FormMethod.Post, new { @class = "form-horizontal  col-sm-12" })) {
						@Html.HiddenFor(i => plan.Id)
						<div class="form-group">
							<div class="col-sm-5">
								@Html.DropDownListExtendedFor(i => plan.TvChannelGroups, tvChannelGroups, obj => obj.Name, null, new { @class = "form-control" })
							</div>
							<div class="col-sm-2"></div>
							<div class="col-sm-2">
								<button class="btn btn-green addTVChannel" type="submit">Добавить</button>
							</div>
						</div>
					}
				</div>
			}
			@if (plan.TvChannelGroups.Count > 0) {
				<div class="col-sm-12">
					<h4>Включенные каналы:</h4>
				</div>
				foreach (var item in plan.TvChannelGroups) {
					<div class="form-group">
						<div class="col-sm-5 tvChannelGroups">
							@item.Name
						</div>
						<div class="col-sm-2"></div>
						<div class="col-sm-2">
							@using (@Html.BeginForm("EditPlan", "Plans", new { id = plan.Id }, FormMethod.Post)) {
								@Html.HiddenFor(i => plan.Id)
								@Html.HiddenForModelList(plan, i => plan.TvChannelGroups, item.Id)
								<button type="submit" class="btn-link entypo-cancel-circled" style="color: red"></button>
							}
						</div>
					</div>
				}
			}
		</div>
	</div>
</div>

<div class="form-group">
</div>
<button class="btn btn-blue" onclick=" location.href = '@Url.Action("PlanIndex", "Plans")' ">Назад</button>