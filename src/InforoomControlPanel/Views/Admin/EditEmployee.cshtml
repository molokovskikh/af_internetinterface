@using Inforoom2.Helpers
@using Inforoom2.Models
@{
    ViewBag.Title = "Редактирование сотрудника";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Employee employee = ViewBag.Employee;
    List<Role> roles = ViewBag.Roles;
    List<Permission> permissions = ViewBag.Permissions;
    bool passwordUpdate = (bool) (ViewBag.PasswordUpdate??false);
}
@section JavaScript{
	<script type="text/javascript" src="@Url.Content("~/Scripts/Employee.js")"></script>
}
<div class="panel panel-default">
	<div class="panel-body">
		@using (Html.BeginForm("EditEmployee", ViewBag.ControllerName as string, FormMethod.Post, new { @class = "form-horizontal form-groups-bordered" })) {
			@Html.HiddenFor(i => employee.Id)
			<div class="col-sm-6">
				<div class="form-group">
					<label class="col-sm-4 control-label">Имя</label>
					<div class="col-sm-8">
						@Html.TextBoxFor(I => employee.Name, new { @class = "form-control" })
						@ViewBag.Validation.GetError(employee, "Name")
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-4 control-label">Логин</label>
					<div class="col-sm-8">
						@Html.TextBoxFor(I => employee.Login, new { @class = "form-control" })
						@ViewBag.Validation.GetError(employee, "Login")
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-4 control-label">Адрес</label>
					<div class="col-sm-6">
						@Html.TextBoxFor(I => employee.Address, new { @class = "form-control" })
						@ViewBag.Validation.GetError(employee, "Address")
					</div>
				</div>
			    <div class="form-group">
			        <label class="col-sm-4 control-label">EMail</label>
			        <div class="col-sm-6">
			            @Html.TextBoxFor(I => employee.Email, new {@class = "form-control"})
			            @ViewBag.Validation.GetError(employee, "Email")
			        </div>
			    </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label">Длительность сессии (0 - знач. по умолчанию)</label>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(I => employee.SessionDurationMinutes, new { @type = "numeric", @max = "4320", @min = "0", @class = "form-control" })
                        @ViewBag.Validation.GetError(employee, "SessionDurationMinutes")
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-4 control-label c-pointer" for="passwordUpdate">Обновить пароль</label>
                    <div class="col-sm-6">
                        @Html.CheckBoxFor(I => passwordUpdate, new { @Id = "passwordUpdate", @Name = "passwordUpdate" })
                    </div>
                </div>
				<div class="form-group">
					<label class="col-sm-4 control-label">Номер телефона</label>
					<div class="col-sm-6">
						@Html.TextBoxFor(I => employee.PhoneNumber, new { @class = "form-control" })
						@ViewBag.Validation.GetError(employee, "PhoneNumber")
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-4 control-label c-pointer" for="IsDisabledCheck">Заблокирован</label>
					<div class="col-sm-6">
						@Html.CheckBoxFor(I => employee.IsDisabled, new { @Id = "IsDisabledCheck" , @Name= "isDisabled" })
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-4 control-label c-pointer" for="ShowContractOfAgencyCheck">Показывать договор поручения</label>
					<div class="col-sm-6">
						@Html.CheckBoxFor(I => employee.ShowContractOfAgency, new {@Id = "ShowContractOfAgencyCheck"})
					</div>
				</div>
				<div class="form-group">
					<span class="col-sm-4 control-label gray bold c-pointer entypo-right-open-mini" phantomFor=".ServiceBlock" phantomIsShown="@(
				employee.WorkBegin.HasValue || employee.WorkEnd.HasValue || employee.WorkStep.HasValue?"true":"false" )" phantomOnClick="CheckEmployeeWithServiceRequest">Прием сервисных заявок</span>
					<div class="col-sm-6"></div>
				</div>
				<div class="ServiceBlock hid">
					<div class="form-group">
						<label class="col-sm-4 control-label">Время начала приема</label>
						<div class="col-sm-6">
							@Html.TextBoxFor(I => employee.WorkBegin, new {@Name = "workBegin", @class = "form-control timepicker"})
							@ViewBag.Validation.GetError(employee, "WorkBegin")
						</div>
					</div>
					<div class="form-group">
						<label class="col-sm-4 control-label">Время конца приема</label>
						<div class="col-sm-6">
							@Html.TextBoxFor(I => employee.WorkEnd, new { @Name = "workEnd", @class = "form-control timepicker"})
							@ViewBag.Validation.GetError(employee, "WorkEnd")
						</div>
					</div>
					<div class="form-group">
						<label class="col-sm-4 control-label">Интервал приема</label>
						<div class="col-sm-6">
							@Html.TextBoxFor(I => employee.WorkStep, new { @Name = "workStep", @class = "form-control timepicker"})
							@ViewBag.Validation.GetError(employee, "WorkStep")
						</div>
					</div>
				</div> 
				<div class="form-group"></div>
					<div class="form-group">
						<div class="col-sm-8">
							<button class="btn btn-green" type="submit">Сохранить</button>
						</div>
					</div>
				</div>
		}
	</div>
	<div class="panel-body">
		@using (Html.BeginForm(ViewBag.ActionName as string, ViewBag.ControllerName as string, FormMethod.Post, new { @class = "form-horizontal form-groups-bordered" })) {
			@Html.HiddenFor(i => employee.Id)
			@Html.Hidden("isDisabled", employee.IsDisabled.ToString())
			<div class="col-sm-6">
				<div class="form-group">
					Добавить роль:
				</div>
				<div class="form-group">
					<div class="col-sm-8">
						@Html.DropDownListExtendedFor(i => employee.Roles, roles, i => i.Name, null, new { @class = "form-control" })
					</div>
					<div class="col-sm-4">
						<button class="btn btn-green" type="submit">Добавить</button>
					</div>
				</div>
			</div>
		}
		<div class="col-sm-6">
			<div class="form-group">
				Роли:
			</div>
			@foreach (var item in employee.Roles.Where(s => s != null)) {
				<div class="form-group">
					<div class="col-sm-10">
						@Html.Raw(item.Name)
					</div>
					<div class="col-sm-2">
						@using (Html.BeginForm(ViewBag.ActionName as string, ViewBag.ControllerName as string, FormMethod.Post, new { @class = "form-horizontal form-groups-bordered" })) {
							@Html.HiddenFor(i => employee.Id)
							@Html.Hidden("isDisabled", employee.IsDisabled.ToString())
							@Html.HiddenForModelList(employee, i => employee.Roles, item.Id)
							<button type="submit" class="btn-link entypo-cancel-circled" style="color: red"></button>
						}
					</div>
				</div>
			}
		</div>
	</div>

	<div class="panel-body">
		@using (Html.BeginForm(ViewBag.ActionName as string, ViewBag.ControllerName as string, FormMethod.Post, new { @class = "form-horizontal form-groups-bordered" })) {
			@Html.HiddenFor(i => employee.Id)
			@Html.Hidden("isDisabled", employee.IsDisabled.ToString())
			<div class="col-sm-6">
				<div class="form-group">
					Добавить права:
				</div>
				<div class="form-group">
					<div class="col-sm-8">
						@Html.DropDownListExtendedFor(i => employee.Permissions, permissions, i => i.Description, null, new { @class = "form-control" })
					</div>
					<div class="col-sm-4">
						<button class="btn btn-green" type="submit">Добавить</button>
					</div>
				</div>
			</div>
		}
		<hr/>
		<div class="col-sm-6">
			<div class="form-group">
				Права:
			</div>
			@foreach (var item in employee.Permissions.Where(s => s != null)) {
				<div class="form-group">
					<div class="col-sm-10">
						@Html.Raw(item.Description)
					</div>
					<div class="col-sm-2">
						@using (Html.BeginForm(ViewBag.ActionName as string, ViewBag.ControllerName as string, FormMethod.Post, new { @class = "form-horizontal form-groups-bordered" })){
							@Html.Hidden("isDisabled", employee.IsDisabled.ToString())
							@Html.HiddenFor(i => employee.IsDisabled)
                            @Html.HiddenFor(i => employee.Id)
							@Html.HiddenForModelList(employee, i => employee.Permissions, item.Id)
							<button type="submit" class="btn-link entypo-cancel-circled" style="color: red"></button>
						}
					</div>
				</div>
			}
		</div>
	</div>
</div>
<div class="form-group">
	<a class="btn btn-blue" href="@Url.Action("EmployeeList")">Назад</a>
</div>

