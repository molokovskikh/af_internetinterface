@using Inforoom2.Helpers
@using Inforoom2.Models
@{
	NetworkNode NetworkNode = ViewBag.NetworkNode;
	TwistedPair TwistedPair = ViewBag.TwistedPair;
	List<Switch> Switches = ViewBag.Switches;
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Title = "Редактировать узел связи";
}

<div class="panel panel-primary">
	<div class="panel-body">
		<div class="col-md-6">
			@using (@Html.BeginForm("EditNetworkNode", "Switch", FormMethod.Post,new { @class = "form-horizontal form-groups-bordered" }))
			{
				<div class="form-group">
					@Html.HiddenFor(model=>NetworkNode.Id)
					<label class="col-sm-3 control-label" for="field-ta">Название</label>
					<div class="col-sm-5">
						@Html.TextBoxFor(model => NetworkNode.Name,new {@class = "form-control"})
						@ViewBag.Validation.GetError(NetworkNode, "Name", "Название не может быть пустым")
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-5 control-label" for="field-ta">
						<div>Виртуальная (не существует физически)</div>
						<div>Необходима для связывания адресов и коммутаторов</div>
					</label>
					<div class="col-sm-5">
						@Html.CheckBoxFor(model => NetworkNode.Virtual,new {@class = "form-control"})
					</div>
				</div>
				<div class="form-group">
					<label class="col-sm-5 control-label" for="field-ta">Описание</label>
					<div class="col-sm-5">
						@Html.TextAreaFor(model => NetworkNode.Description,new {@class = "form-control"})
					</div>
				</div>
				<div class="form-group">
					<button class="btn btn-green save" type="submit">Принять изменения</button>
				</div>
			}
		</div>
		<div class="col-md-6">
			<div class="col-sm-12">
				<h4>Подключенные многопарники:</h4>
			</div>
			<div class="col-sm-12 form-horizontal">
				@foreach(var item in NetworkNode.TwistedPairs) {
					<div class="form-group ">
						<div class="col-sm-2">Id:@item.Id</div>
						<div class="col-sm-3">Кол-во пар:@item.PairCount</div>
						<div class="col-sm-7">
							<a class="entypo-cancel-circled" style="color:red" href="@Url.Action("DeleteTwistedPair","Switch",new {id = item.Id })"></a>
						</div>
					</div>
				}
			</div>
			<div class="col-sm-12">
				<h4>Добавить многопарник:</h4>
			</div>
			@using (@Html.BeginForm("CreateTwistedPair", "Switch", FormMethod.Post,new { @class = "form-horizontal form-groups-bordered" }))
			{
				@Html.HiddenFor(i=>TwistedPair.NetworkNode.Id)
				<div class="form-group">
					<label class="col-sm-2 control-label" for="field-ta">Кол-во пар:</label>
					<div class="col-sm-2">
						@{
							var list = new SelectList(TwistedPair.GetAvailiblePairCounts());
						}
						@Html.DropDownListFor(i => TwistedPair.PairCount,list,new {@class = "form-control"})
					</div>
					<div class="col-sm-1"><button class="btn btn-green add" type="submit">Добавить</button></div>
				</div>
			}
			<div class="col-sm-12">
				<h4>Подключенные коммутаторы:</h4>
			</div>
			<div class="col-sm-12 form-horizontal">
				@foreach(var item in NetworkNode.Switches) {
					<div class="form-group ">
						<div class="col-sm-2">Id:@item.Id</div>
						<div class="col-sm-5">Имя:@item.Name</div>
						<div class="col-sm-3">Вместимость:@item.PortCount</div>
					</div>
				}
			</div>
			<div class="col-sm-12 ">
				<a class="btn btn-success btn-sm btn-icon icon-left" href="@Url.Action("CreateSwitchAddress","Address",new {id = NetworkNode.Id})">
					<i class="entypo-plus"></i>
					Добавить адрес
				</a>
			</div>
			<div class="col-sm-12">
				<h4>Обслуживает адреса:</h4>
			</div>
			<div class="col-sm-12 form-horizontal">
				@foreach (var item in NetworkNode.Addresses) {
					<div class="form-group ">
						<div class="col-sm-5">
							@item.GetFullAddress(true)
						</div>
						<div class="col-sm-2">
							<a class="entypo-cancel-circled" style="color:red" href="@Url.Action("DeleteSwitchAdress","Switch",new {id = item.Id })"></a>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</div>
<div class="form-group">
	<button class="btn btn-blue" onclick=" location.href = '@Url.Action("NetworkNodeList", "Switch")' ">Назад</button>
</div>