@using System.Collections.Specialized
@using Common.Tools
@using Inforoom2.Components
@using Inforoom2.Helpers
@using Inforoom2.Models
@model dynamic

@{
	ViewBag.Title = "Список сервисных заявок";
	Layout = "~/Views/Shared/_Layout.cshtml";
	InforoomModelFilter<ServiceRequest> modelFilter = ViewBag.pager;
	var serviceRequests = modelFilter.GetItems();

	List<Region> regions = ViewBag.Regions;
	List<ServiceMan> serviceMen = ViewBag.ServiceMan;
	var regionList = new NameValueCollection();
	var serviceMenList = new NameValueCollection();
	var serviceRequestStatusList = new NameValueCollection();

	regionList["0"] = " ";
	regions.Each(i => regionList[i.Id.ToString()] = i.Name.ToString());
	serviceMenList["0"] = " ";
	serviceMen.Each(i => serviceMenList[i.Id.ToString()] = i.Employee.Name.ToString());
	serviceRequestStatusList["1"] = "Новая";
	serviceRequestStatusList["3"] = "Закрыта";
	serviceRequestStatusList["5"] = "Отменена";
	var datePeriodTypeList = new NameValueCollection();
	datePeriodTypeList["CreationDate"] = "Создания";
	datePeriodTypeList["BeginTime"] = "Назначения";
	datePeriodTypeList["ClosedDate"] = "Закрытия";
	datePeriodTypeList["CancelDate"] = "Отмены";
	datePeriodTypeList["ModificationDate"] = "Изменения";
}

<form>
	<div class="panel-body">
		<div class="row">
			<div class="col-sm-2">Статус заявки</div>
			<div class="col-sm-2">@modelFilter.FormFilterManual("ServiceRequestStatus", HtmlType.Dropdown, serviceRequestStatusList)</div>
		</div>
	</div>
	<div class="panel-body">
		<div class="row">
			<div class="col-sm-2">Дата</div>
			<div class="col-sm-2">@modelFilter.FormFilterManual("DataFilter", HtmlType.Dropdown, datePeriodTypeList)</div>
		</div>
	</div>
	<div class="panel-body">
		<div class="row">
			<div class="col-sm-2">Интервал даты с </div>
			<div class="col-sm-2">@modelFilter.FormFilterManual("RequestFilterFrom", HtmlType.Date, SystemTime.Now().AddMonths(-1).Date)</div>
			<div class="col-sm-1">по</div>
			<div class="col-sm-2">@modelFilter.FormFilterManual("RequestFilterTill", HtmlType.Date, SystemTime.Now().AddDays(1).Date)</div>
		</div>
	</div>
	<div class="panel-body">
		<div class="row">
			<div class="col-sm-2">
				<label class="c-pointer" style="margin-bottom: 12px;" for="filterFree">Бесплатные</label>
			</div>
			<div class="col-sm-2">@modelFilter.FormFilter(i => i.Free, HtmlType.Dropdown, ComparsionType.Equal, new { @id = "filterFree" })</div>
		</div>
	</div>
	<div class="panel-body">
		<div class="row">
			<div class="col-sm-2">Назначена на</div>
			<div class="col-sm-2">@modelFilter.FormFilterManual("ServiceMenFilter", HtmlType.Dropdown, serviceMenList)</div>
		</div>
	</div>
	<div class="panel-body">
		<div class="row">
			<div class="col-sm-2">Регион</div>
			<div class="col-sm-2">@modelFilter.ClientRegionFilter(i => i.Client, new { @class = "form-control"})</div>
		</div>
	</div>
	<div class="panel-body">
		<div class="row">
			<div class="col-sm-2">Физ.лицо</div>
			<div class="col-sm-2">@modelFilter.FormFilter(i => i.Client.PhysicalClient, HtmlType.Dropdown, ComparsionType.IsNotNull, new { @class = "form-control" })</div>
		</div>
	</div>
	<div class="panel-body">
		<div class="row">
			<div class="col-sm-2">Поисковая фраза</div>
			<div class="col-sm-2">@modelFilter.FormFilterManual("TextSearch", HtmlType.text)</div>
		</div>
	</div>
	<div class="row">
		<div class="col-sm-1">
			@modelFilter.SubmitButton(new { @class = "btn btn-success btn-sm" })
		</div>
		<div class="col-sm-1">
			@modelFilter.CleanButton(new { @class = "btn btn-success btn-sm" })
		</div>
		<div class="col-sm-1">
			@modelFilter.ExportButton(new { @class = "btn btn-sm btn-blue margin" })
		</div>
	</div>
</form>
<div id="table-2_wrapper" class="dataTables_wrapper form-inline no-footer">
	<div class="panel-body">
		<div class="row">
			@{ Html.RenderPartial("Pagination"); }
		</div>
	</div>
	<table id="table-2" class="table table-bordered table-striped datatable dataTable no-footer" role="grid" aria-describedby="table-2_info">
		<thead>
			<tr role="row">
				<th class="sorting" tabindex="0" aria-controls="table-2">
					<a href="@modelFilter.OrderBy(s => s.Id)">Номер</a>
				</th>
				<th class="sorting" tabindex="0" aria-controls="table-2">
					<a href="@modelFilter.OrderBy(s => s.Client.Id)">ЛС</a>
				</th>
				<th class="sorting" tabindex="0" aria-controls="table-2">
					<a href="@modelFilter.OrderBy(s => s.Client.PhysicalClient.Name)">Клиент</a>
				</th>
				<th class="sorting" tabindex="0" aria-controls="table-2">Краткое описание</th>
				<th class="sorting" tabindex="0" aria-controls="table-2">
					<a href="@modelFilter.OrderBy(s => s.Phone)">Контакт</a>
				</th>
				<th class="sorting" tabindex="0" aria-controls="table-2">
					<a href="@modelFilter.OrderBy(s => s.CreationDate)">Создана</a>
				</th>
				<th class="sorting" tabindex="0" aria-controls="table-2">
					<a href="@modelFilter.OrderBy(s => s.CancelDate)">Отменена</a>
				</th>
				<th class="sorting" tabindex="0" aria-controls="table-2">
					<a href="@modelFilter.OrderBy(s => s.ClosedDate)">Выполнена</a>
				</th>
				<th class="sorting" tabindex="0" aria-controls="table-2">
					<a href="@modelFilter.OrderBy(s => s.Sum)">Стоимость (руб.)</a>
				</th>
				<th class="sorting" tabindex="0" aria-controls="table-2">
					<a href="@modelFilter.OrderBy(s => s.Status)">Статус</a>
				</th>
				<th class="sorting" tabindex="0" aria-controls="table-2">Назначена на</th>
				<th class="sorting" tabindex="0" aria-controls="table-2">Дата назначения</th>
				<th class="sorting" tabindex="0" aria-controls="table-2">Действие</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var request in serviceRequests) {
				<tr role="row" class="odd">
					<td>
						<a href="@Url.Action("ServiceRequestEdit", "ServiceRequest", new { id = request.Id })">@request.Id</a>
					</td>
					<td>
						<a target="_blank" href="@Url.Action(request.Client.PhysicalClient != null ? "InfoPhysical" : "InfoLegal", "Client", new {request.Client.Id})" class="idColumn @(request.Client.PhysicalClient != null ? "linkPhysical" : "linkLegal")"> @request.Client.Id</a>	
					</td>
					<td>@(request.Client.PhysicalClient != null ? request.Client.PhysicalClient.FullName : request.Client._Name)</td>
					<td>@(request.Description != null ? request.Description.Length > 100 ? request.Description.Substring(0, 100) + "..." : request.Description : "")</td>
					<td>@request.Phone</td>
					<td>@request.CreationDate</td>
					<td>@(request.CancelDate.HasValue && request.CancelDate.Value.Year > 1000 ? request.CancelDate.Value.ToString("dd.MM.yyyy HH:mm:ss") : "")</td>
					<td>@request.ClosedDate</td>
					<td>@(request.Sum.HasValue ? decimal.Round(request.Sum.Value, 2).ToString() : "")</td>
					<td>@request.Status.GetDescription()</td>
					<td>@(request.ServicemenScheduleItem != null && request.ServicemenScheduleItem.ServiceMan != null ? request.ServicemenScheduleItem.ServiceMan.Employee.Name : "")</td>
					<td>@(request.ServicemenScheduleItem != null && request.ServicemenScheduleItem.BeginTime.HasValue ? request.ServicemenScheduleItem.BeginTime.Value.ToString("dd.MM.yyyy HH.mm.ss") : "")</td>
					<td>
						<a class="btn btn-success btn-sm btn-icon icon-left" target="_blank" href="@Url.Action("ServiceRequestEdit", "ServiceRequest", new { id = request.Id })">
							<i class="entypo-doc-text"></i>
							Изменить
						</a>
					</td>
				</tr>
			}
		</tbody>
	</table>
	<div class="row">
		@{ Html.RenderPartial("Pagination"); }
	</div>
</div>