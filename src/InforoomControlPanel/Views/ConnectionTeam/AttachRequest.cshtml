@{
	ViewBag.Title = "Назначение заявки в график";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@section JavaScript{
	<script type="text/javascript" src="@Url.Content("~/Scripts/ConnectionTeamController.ConnectionTable.js")"></script>}
@using Inforoom2.Components
@using Inforoom2.Helpers
@using Inforoom2.Models
@model dynamic

@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	ServicemenScheduleItem scheduleItem = ViewBag.ServicemenScheduleItem;
	ViewBag.Title = scheduleItem.RequestType == ServicemenScheduleItem.Type.ServiceRequest ? "Сервисная заявка" : "Заявка на подключение";
	List<ServiceMan> servicemen = ViewBag.Servicemen;
	ValidationRunner runner = ViewBag.Validation;
	Region region = ViewBag.Region;
	string action = ViewBag.ActionName;
	string controller = ViewBag.ControllerName;
	var duration = ViewBag.Duration;
}

<div class="panel panel-primary col-md-6">
	<div class="panel-body">
		@using (@Html.BeginForm(action, controller, FormMethod.Post, new { @class = "form-horizontal form-groups-bordered" })) {
			@Html.HiddenFor(i => scheduleItem.Id, new { @class = "form-control" })
			@Html.HiddenFor(i => scheduleItem.RequestType, new { @class = "form-control", @Name = "scheduleItem.RequestType" })
			if (scheduleItem.RequestType == ServicemenScheduleItem.Type.ServiceRequest) {
				<div class="form-group">
					<div class="col-sm-4">
						<div class="form-group">
							<a class="btn btn-green" style="width: 138px;" href="@Url.Action("ServiceRequestEdit", "ServiceRequest", new { id = scheduleItem.ServiceRequest.Id })">Прейти к заявке</a>
						</div>
					</div>
				</div>
			}
			<div class="form-group">
				<label class="col-sm-2 control-label">От</label>
				<div class="col-sm-4">
					<a @(scheduleItem.Client.PhysicalClient == null ? "style=color:#0D90D4;" : "") href="@(ConfigHelper.GetParam("adminPanelOld")
					                                                                                       + (String.Format("UserInfo/{0}?filter.ClientCode=", scheduleItem.Client.PhysicalClient != null ? "ShowPhysicalClient" : "ShowLawyerPerson"))
					                                                                                       + scheduleItem.Client.Id)">@scheduleItem.Client.Fullname</a>
				</div>
			</div>
			<div class="form-group">
				<label class="col-sm-2 control-label">Исполнитель</label>
				<div class="col-sm-4">
					@Html.DropDownListExtendedFor(i => scheduleItem.ServiceMan, servicemen, obj => obj.Employee.Name, i => i.Id, new { @class = "form-control", disabled = "disabled" }, scheduleItem.ServiceMan != null ? scheduleItem.ServiceMan.Id : 0)
					@ViewBag.Validation.GetError(scheduleItem, "ServiceMan", "Поле не может быть пустым")
				</div>
			</div>
			<div class="form-group">
				<label class="col-sm-2 control-label">Время выполнения</label>
				<div class="col-sm-4">
					@Html.ValidationEditor(runner, scheduleItem, "BeginTime", new { @Readonly = "", @Name = "scheduleItem.BeginTime" }, HtmlTag.datetime, HtmlType.none)
				</div>
			</div>
			<div class="form-group">
				<label class="col-sm-2 control-label">Длительность выполнения (мин)</label>
				<div class="col-sm-4">
					<div class="input-spinner">

						<button class="btn btn-default" type="button">-</button>

						<input type="text" name="duration" value="@duration" class="form-control size-1">

						<button class="btn btn-default" type="button">+</button>

					</div>
				</div>
			</div>
			<div class="form-group">
				<label class="col-sm-2 control-label">Комментарии</label>
				<div class="col-sm-4">
					@Html.TextAreaFor(i => scheduleItem.Comment, new { @class = "form-control", @rows = 10 })
				</div>
			</div>
			<div class="form-group">
				<button class="btn btn-green" id="submitScheduleItem" type="submit">Назначить в график</button>
			</div>
		}
	</div>
</div>
@{
	ViewBag.Servicemen = servicemen.Where(i => i.Region == region).ToList();
	Html.RenderPartial("ConnectionTable", new ViewDataDictionary(ViewData));
}