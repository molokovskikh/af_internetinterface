@using Common.Tools
@using Inforoom2.Components
@using Inforoom2.Helpers
@using Inforoom2.Models
@section JavaScript{
	<script type="text/javascript"src="@Url.Content("~/Scripts/ConnectionTeamPrintTimeTable.js?v=2")"></script> 
}
@{
	ViewBag.Title = "Печать графика";
	Layout = "~/Views/Shared/_Layout.cshtml";
	int printServicemenId = ViewBag.PrintServicemenId;
	int printRegionId = ViewBag.PrintRegionId;
	string printDate = ViewBag.PrintDate;
	string updateKey = ViewBag.UpdatePasswordsKey;

	List<ServicemenScheduleItem> servicemenScheduleList = ViewBag.ServicemenScheduleList;
	var serviceMenList = servicemenScheduleList.Select(s => s.ServiceMan).ToList().Distinct();
	Dictionary<ServicemenScheduleItem, Tuple<string, string>> additionalData = ViewBag.AdditionalData;
}
<div class="panel panel-primary doNotPrint">
	<a class="btn btn-blue" href="@Url.Action("ConnectionTable", "ConnectionTeam")" ty type="button">
		Назад
	</a>
	<button class="print btn btn-green btn-icon icon-left" type="button">
		Печать
		<i class="entypo-print"></i>
	</button>
	<a class="button-inlineBlock">
		@using (@Html.BeginForm("PrintTimeTable", "ConnectionTeam", null, FormMethod.Post, new { @class = "form-horizontal form-groups-bordered" })) {
			@Html.HiddenFor(s => updateKey, new { @Name = "updatePasswordsKey" })
			@Html.HiddenFor(s => printDate, new { @Name = "printDate" })
			@Html.HiddenFor(s => printRegionId, new { @Name = "printRegionId" })
			@Html.HiddenFor(s => printServicemenId, new { @Name = "printServicemenId" })
			<button class="btn btn-red btn-icon icon-left" type="submit">
				<span>Обновить пароли</span>
				<i class="entypo-print"></i>
			</button>
		}
	</a>
</div>

<div class="panel-body">
	<div class="servicemen panel datatable datatable panel-primary">
		@foreach (var serviceMan in serviceMenList) {
			<div class="serviceManBlock @(serviceMenList.LastOrDefault() == serviceMan ? "" : "pageBreak" )">
				<h3 class="name">@serviceMan.Employee.Name</h3>
				@foreach (var item in servicemenScheduleList.Where(s => s.ServiceMan == serviceMan).OrderBy(d => d.BeginTime).ToList()) {
					<div class="item">
						<p class="time">
							@item.BeginTime.Value.ToString("dd.MM.yyyy HH:mm") - @item.EndTime.Value.ToString("HH:mm")
							@if (@item.RequestType == ServicemenScheduleItem.Type.ServiceRequest) {
								<span class="type">сервисная заявка</span>
							}
							else {
								<span class="type">заявка на подключение</span>
							}
						</p>
						<p class="content"><strong>ФИО:</strong> @item.GetClient().Fullname</p>
						<p class="content"><strong>ЛС:</strong> @item.GetClient().Id</p>
						<p class="content"><strong>Телефон:</strong> @item.GetPhone()</p>
						<p class="content"><strong>Адрес:</strong> @item.GetAddress()</p>
						<p class="content"><strong>Комментарии:</strong> @item.Comment</p>
						@if (item.RequestType == ServicemenScheduleItem.Type.ServiceRequest) {
							<p class="content">
								<strong>Коммутатор:</strong>
								@{
									var firstOrDefault = item.GetClient().Endpoints.FirstOrDefault();
								}
								@if (firstOrDefault != null) {
									@firstOrDefault.Switch.Name
								}
							</p>
							<p class="content">
								<strong>IP:</strong>
								@if (firstOrDefault != null) {
									@firstOrDefault.Switch.Ip
								}
							</p>
							<p class="content">
								<strong>Порт:</strong>
								@{
									var clientEndpoint = item.GetClient().Endpoints.FirstOrDefault();
								}
								@if (clientEndpoint != null) {
									@clientEndpoint.Port
								}
							</p>
						}
						@if (additionalData.ContainsKey(item)) {
							<p class="loginAndPass"><strong>Логин:</strong> @additionalData[item].Item1, <strong>Пароль:</strong> @additionalData[item].Item2</p>
						}
					</div>
				}
			</div>
		}
	</div>
</div>